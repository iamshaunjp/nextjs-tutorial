{"version":3,"sources":["../../../next-server/server/require.ts"],"names":["pageNotFoundError","page","err","Error","code","getPagePath","distDir","serverless","dev","serverBuildPath","SERVERLESS_DIRECTORY","SERVER_DIRECTORY","pagesManifest","require","PAGES_MANIFEST","console","error","requirePage","pagePath","endsWith","promises","readFile","requireFontManifest","fontManifest","FONT_MANIFEST"],"mappings":"iMAAA,sBACA,0BACA,2CAMA,wDAGO,QAASA,CAAAA,iBAAT,CAA2BC,IAA3B,CAAgD,CACrD,KAAMC,CAAAA,GAAQ,CAAG,GAAIC,CAAAA,KAAJ,CAAW,gCAA+BF,IAAK,EAA/C,CAAjB,CACAC,GAAG,CAACE,IAAJ,CAAW,QAAX,CACA,MAAOF,CAAAA,GAAP,CACD,CAEM,QAASG,CAAAA,WAAT,CACLJ,IADK,CAELK,OAFK,CAGLC,UAHK,CAILC,GAJK,CAKG,CACR,KAAMC,CAAAA,eAAe,CAAG,eACtBH,OADsB,CAEtBC,UAAU,EAAI,CAACC,GAAf,CAAqBE,+BAArB,CAA4CC,2BAFtB,CAAxB,CAIA,KAAMC,CAAAA,aAAa,CAAGC,OAAO,CAAC,eAC5BJ,eAD4B,CAE5BK,yBAF4B,CAAD,CAA7B,CAKA,GAAI,CACFb,IAAI,CAAG,2CAAoB,yCAAkBA,IAAlB,CAApB,CAAP,CACD,CAAC,MAAOC,GAAP,CAAY,CACZa,OAAO,CAACC,KAAR,CAAcd,GAAd,EACA,KAAMF,CAAAA,iBAAiB,CAACC,IAAD,CAAvB,CACD,CAED,GAAI,CAACW,aAAa,CAACX,IAAD,CAAlB,CAA0B,CACxB,KAAMD,CAAAA,iBAAiB,CAACC,IAAD,CAAvB,CACD,CACD,MAAO,eAAKQ,eAAL,CAAsBG,aAAa,CAACX,IAAD,CAAnC,CAAP,CACD,CAEM,QAASgB,CAAAA,WAAT,CACLhB,IADK,CAELK,OAFK,CAGLC,UAHK,CAIA,CACL,KAAMW,CAAAA,QAAQ,CAAGb,WAAW,CAACJ,IAAD,CAAOK,OAAP,CAAgBC,UAAhB,CAA5B,CACA,GAAIW,QAAQ,CAACC,QAAT,CAAkB,OAAlB,CAAJ,CAAgC,CAC9B,MAAOC,cAASC,QAAT,CAAkBH,QAAlB,CAA4B,MAA5B,CAAP,CACD,CACD,MAAOL,CAAAA,OAAO,CAACK,QAAD,CAAd,CACD,CAEM,QAASI,CAAAA,mBAAT,CAA6BhB,OAA7B,CAA8CC,UAA9C,CAAmE,CACxE,KAAME,CAAAA,eAAe,CAAG,eACtBH,OADsB,CAEtBC,UAAU,CAAGG,+BAAH,CAA0BC,2BAFd,CAAxB,CAIA,KAAMY,CAAAA,YAAY,CAAGV,OAAO,CAAC,eAAKJ,eAAL,CAAsBe,wBAAtB,CAAD,CAA5B,CACA,MAAOD,CAAAA,YAAP,CACD","sourcesContent":["import { promises } from 'fs'\nimport { join } from 'path'\nimport {\n  PAGES_MANIFEST,\n  SERVER_DIRECTORY,\n  SERVERLESS_DIRECTORY,\n  FONT_MANIFEST,\n} from '../lib/constants'\nimport { normalizePagePath, denormalizePagePath } from './normalize-page-path'\nimport { PagesManifest } from '../../build/webpack/plugins/pages-manifest-plugin'\n\nexport function pageNotFoundError(page: string): Error {\n  const err: any = new Error(`Cannot find module for page: ${page}`)\n  err.code = 'ENOENT'\n  return err\n}\n\nexport function getPagePath(\n  page: string,\n  distDir: string,\n  serverless: boolean,\n  dev?: boolean\n): string {\n  const serverBuildPath = join(\n    distDir,\n    serverless && !dev ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY\n  )\n  const pagesManifest = require(join(\n    serverBuildPath,\n    PAGES_MANIFEST\n  )) as PagesManifest\n\n  try {\n    page = denormalizePagePath(normalizePagePath(page))\n  } catch (err) {\n    console.error(err)\n    throw pageNotFoundError(page)\n  }\n\n  if (!pagesManifest[page]) {\n    throw pageNotFoundError(page)\n  }\n  return join(serverBuildPath, pagesManifest[page])\n}\n\nexport function requirePage(\n  page: string,\n  distDir: string,\n  serverless: boolean\n): any {\n  const pagePath = getPagePath(page, distDir, serverless)\n  if (pagePath.endsWith('.html')) {\n    return promises.readFile(pagePath, 'utf8')\n  }\n  return require(pagePath)\n}\n\nexport function requireFontManifest(distDir: string, serverless: boolean) {\n  const serverBuildPath = join(\n    distDir,\n    serverless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY\n  )\n  const fontManifest = require(join(serverBuildPath, FONT_MANIFEST))\n  return fontManifest\n}\n"]}