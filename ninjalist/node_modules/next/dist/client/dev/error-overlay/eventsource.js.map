{"version":3,"sources":["../../../../client/dev/error-overlay/eventsource.js"],"names":["eventCallbacks","EventSourceWrapper","options","source","lastActivity","Date","listeners","timeout","init","timer","setInterval","handleDisconnect","window","EventSource","path","onopen","handleOnline","onerror","onmessage","handleMessage","log","console","event","i","length","forEach","cb","unfiltered","data","indexOf","clearInterval","close","setTimeout","addMessageListener","fn","push","getEventSourceWrapper","ondemand"],"mappings":"yFAAA,KAAMA,CAAAA,cAAc,CAAG,EAAvB,CAEA,QAASC,CAAAA,kBAAT,CAA4BC,OAA5B,CAAqC,CACnC,GAAIC,CAAAA,MAAJ,CACA,GAAIC,CAAAA,YAAY,CAAG,GAAIC,CAAAA,IAAJ,EAAnB,CACA,GAAIC,CAAAA,SAAS,CAAG,EAAhB,CAEA,GAAI,CAACJ,OAAO,CAACK,OAAb,CAAsB,CACpBL,OAAO,CAACK,OAAR,CAAkB,GAAK,IAAvB,CACD,CAEDC,IAAI,GACJ,GAAIC,CAAAA,KAAK,CAAGC,WAAW,CAAC,UAAY,CAClC,GAAI,GAAIL,CAAAA,IAAJ,GAAaD,YAAb,CAA4BF,OAAO,CAACK,OAAxC,CAAiD,CAC/CI,gBAAgB,GACjB,CACF,CAJsB,CAIpBT,OAAO,CAACK,OAAR,CAAkB,CAJE,CAAvB,CAMA,QAASC,CAAAA,IAAT,EAAgB,CACdL,MAAM,CAAG,GAAIS,CAAAA,MAAM,CAACC,WAAX,CAAuBX,OAAO,CAACY,IAA/B,CAAT,CACAX,MAAM,CAACY,MAAP,CAAgBC,YAAhB,CACAb,MAAM,CAACc,OAAP,CAAiBN,gBAAjB,CACAR,MAAM,CAACe,SAAP,CAAmBC,aAAnB,CACD,CAED,QAASH,CAAAA,YAAT,EAAwB,CACtB,GAAId,OAAO,CAACkB,GAAZ,CAAiBC,OAAO,CAACD,GAAR,CAAY,iBAAZ,EACjBhB,YAAY,CAAG,GAAIC,CAAAA,IAAJ,EAAf,CACD,CAED,QAASc,CAAAA,aAAT,CAAuBG,KAAvB,CAA8B,CAC5BlB,YAAY,CAAG,GAAIC,CAAAA,IAAJ,EAAf,CACA,IAAK,GAAIkB,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGjB,SAAS,CAACkB,MAA9B,CAAsCD,CAAC,EAAvC,CAA2C,CACzCjB,SAAS,CAACiB,CAAD,CAAT,CAAaD,KAAb,EACD,CAEDtB,cAAc,CAACyB,OAAf,CAAwBC,EAAD,EAAQ,CAC7B,GAAI,CAACA,EAAE,CAACC,UAAJ,EAAkBL,KAAK,CAACM,IAAN,CAAWC,OAAX,CAAmB,QAAnB,IAAiC,CAAC,CAAxD,CAA2D,OAC3DH,EAAE,CAACJ,KAAD,CAAF,CACD,CAHD,EAID,CAED,QAASX,CAAAA,gBAAT,EAA4B,CAC1BmB,aAAa,CAACrB,KAAD,CAAb,CACAN,MAAM,CAAC4B,KAAP,GACAC,UAAU,CAACxB,IAAD,CAAON,OAAO,CAACK,OAAf,CAAV,CACD,CAED,MAAO,CACLwB,KAAK,CAAE,IAAM,CACXD,aAAa,CAACrB,KAAD,CAAb,CACAN,MAAM,CAAC4B,KAAP,GACD,CAJI,CAKLE,kBAAkB,CAAE,SAAUC,EAAV,CAAc,CAChC5B,SAAS,CAAC6B,IAAV,CAAeD,EAAf,EACD,CAPI,CAAP,CASD,CAEM,QAASE,CAAAA,qBAAT,CAA+BlC,OAA/B,CAAwC,CAC7C,GAAI,CAACA,OAAO,CAACmC,QAAb,CAAuB,CACrB,MAAO,CACLJ,kBAAkB,CAAGP,EAAD,EAAQ,CAC1B1B,cAAc,CAACmC,IAAf,CAAoBT,EAApB,EACD,CAHI,CAAP,CAKD,CACD,MAAOzB,CAAAA,kBAAkB,CAACC,OAAD,CAAzB,CACD","sourcesContent":["const eventCallbacks = []\n\nfunction EventSourceWrapper(options) {\n  var source\n  var lastActivity = new Date()\n  var listeners = []\n\n  if (!options.timeout) {\n    options.timeout = 20 * 1000\n  }\n\n  init()\n  var timer = setInterval(function () {\n    if (new Date() - lastActivity > options.timeout) {\n      handleDisconnect()\n    }\n  }, options.timeout / 2)\n\n  function init() {\n    source = new window.EventSource(options.path)\n    source.onopen = handleOnline\n    source.onerror = handleDisconnect\n    source.onmessage = handleMessage\n  }\n\n  function handleOnline() {\n    if (options.log) console.log('[HMR] connected')\n    lastActivity = new Date()\n  }\n\n  function handleMessage(event) {\n    lastActivity = new Date()\n    for (var i = 0; i < listeners.length; i++) {\n      listeners[i](event)\n    }\n\n    eventCallbacks.forEach((cb) => {\n      if (!cb.unfiltered && event.data.indexOf('action') === -1) return\n      cb(event)\n    })\n  }\n\n  function handleDisconnect() {\n    clearInterval(timer)\n    source.close()\n    setTimeout(init, options.timeout)\n  }\n\n  return {\n    close: () => {\n      clearInterval(timer)\n      source.close()\n    },\n    addMessageListener: function (fn) {\n      listeners.push(fn)\n    },\n  }\n}\n\nexport function getEventSourceWrapper(options) {\n  if (!options.ondemand) {\n    return {\n      addMessageListener: (cb) => {\n        eventCallbacks.push(cb)\n      },\n    }\n  }\n  return EventSourceWrapper(options)\n}\n"]}