{"version":3,"sources":["../../build/index.ts"],"names":["staticCheckWorker","require","resolve","build","dir","conf","reactProductionProfiling","debugOutput","span","tracer","startSpan","loadedEnvFiles","Log","config","PHASE_PRODUCTION_BUILD","target","buildId","generateBuildId","nanoid","distDir","path","join","headers","rewrites","redirects","ciEnvironment","isCI","hasNextSupport","cacheDir","hasCache","console","log","prefixes","warn","buildSpinner","prefixText","info","telemetry","Telemetry","publicDir","pagesDir","hasPublicDir","record","cliCommand","isSrcDir","relative","startsWith","hasNowJson","cwd","isCustomServer","then","events","ignoreTypeScriptErrors","Boolean","typescript","ignoreBuildErrors","isLikeServerless","pagePaths","pageExtensions","allStaticPages","Set","allPageInfos","Map","previewProps","previewModeId","crypto","randomBytes","toString","previewModeSigningKey","previewModeEncryptionKey","mappedPages","entrypoints","pageKeys","Object","keys","conflictingPublicFiles","hasCustomErrorPage","hasPages404","hasPublicUnderScoreNextDir","Error","PUBLIC_DIR_MIDDLEWARE_CONFLICT","page","hasPublicPageFile","push","numConflicting","length","nestedReservedPages","filter","match","dirname","buildCustomRoute","r","type","routeRegex","source","strict","sensitive","delimiter","statusCode","permanent","undefined","regex","routesManifestPath","ROUTES_MANIFEST","routesManifest","version","pages404","basePath","map","dynamicRoutes","isDynamicRoute","re","routeKeys","namedRegex","dataRoutes","i18n","distDirCreated","promises","mkdir","recursive","err","code","writeFile","JSON","stringify","manifestPath","SERVERLESS_DIRECTORY","SERVER_DIRECTORY","PAGES_MANIFEST","requiredServerFiles","compress","configFile","files","BUILD_MANIFEST","PRERENDER_MANIFEST","REACT_LOADABLE_MANIFEST","experimental","optimizeFonts","FONT_MANIFEST","BUILD_ID_FILE","nonNullable","file","ignore","configs","Promise","all","isServer","client","server","clientConfig","optimization","minimize","minimizer","webpackBuildStart","process","hrtime","result","warnings","errors","clientResult","serverResult","webpackBuildEnd","stopAndPersist","error","chalk","red","indexOf","page_name_regex","parsed","exec","page_name","groups","durationInSeconds","postCompileSpinner","buildManifestPath","ssgPages","ssgStaticFallbackPages","ssgBlockingFallbackPages","staticPages","invalidPages","hybridAmpPages","serverPropsPages","additionalSsgPaths","additionalSsgPathsEncoded","pageInfos","pagesManifest","parse","readFile","buildManifest","customAppGetInitialProps","namedExports","isNextImageImported","analysisBegin","hasSsrAmpPages","staticCheckSpan","hasNonStaticErrorPage","env","NEXT_PHASE","staticCheckWorkers","Worker","numWorkers","cpus","enableWorkerThreads","workerThreads","getStdout","pipe","stdout","getStderr","stderr","runtimeEnvConfig","publicRuntimeConfig","serverRuntimeConfig","nonStaticErrorPage","attributes","actualPage","selfSize","allSize","isSsg","isStatic","isHybridAmp","ssgPageRoutes","nonReservedPage","serverBundle","bold","yellow","workerResult","spanContext","opentelemetryApi","propagation","inject","context","active","isPageStatic","locales","defaultLocale","isAmpOnly","add","hasStaticProps","prerenderRoutes","encodedPrerenderRoutes","set","prerenderFallback","hasServerProps","PAGES_404_GET_INITIAL_PROPS_ERROR","delete","message","size","totalSize","static","initialRevalidateSeconds","end","pagePath","dataRoute","posix","dataRouteRegex","namedDataRouteRegex","replace","RegExp","useStatic404","pg","SERVER_FILES_MANIFEST","finalPrerenderRoutes","tbdPrerenderRoutes","ssgNotFoundPaths","combinedPages","includes","exportApp","default","exportOptions","silent","buildExport","threads","pages","outdir","statusMessage","exportConfig","initialPageRevalidationMap","exportPathMap","defaultMap","forEach","has","query","__nextFallback","routes","encodedRoutes","get","route","routeIdx","__nextSsgPath","isDynamic","isFallback","locale","outputPath","__nextLocale","trailingSlash","postBuildSpinner","unlink","serverOutputDir","moveExportedPage","originPage","ext","additionalSsgFile","orig","relativeDest","substr","split","dest","isNotFound","rename","curPath","localeExt","extname","relativeDestNoPages","updatedRelativeDest","updatedOrig","updatedDest","isStaticSsgFallback","hasAmp","hasHtmlOutput","ampPage","localePage","srcRoute","pageInfo","extraRoutes","pageFile","rmdir","analysisEnd","staticPageCount","staticPropsPageCount","serverPropsPageCount","ssrPageCount","hasStatic404","hasReportWebVitals","rewritesCount","headersCount","redirectsCount","finalDynamicRoutes","tbdRoute","normalizedRoute","fallback","prerenderManifest","notFoundRoutes","preview","generateClientSsgManifest","images","deviceSizes","imageSizes","sizes","IMAGES_MANIFEST","EXPORT_MARKER","hasExportPathMap","exportTrailingSlash","EXPORT_DETAIL","catch","reject","key","distPath","analyticsId","green","flush","entries","pathname","clientSsgManifestContent","CLIENT_STATIC_FILES_PATH"],"mappings":"2DAAA,8BACA,oDACA,sDACA,sBACA,+DACA,2EACA,mGACA,0EACA,0DACA,+DACA,kDACA,kHACA,2CAIA,8CACA,mDACA,oFAMA,gDACA,wDACA,mEACA,wDAiBA,sDAMA,6EAIA,qDACA,4EACA,sDACA,2EACA,2CAMA,6CACA,oCACA,kCACA,oDACA,2CACA,yDACA,0DACA,gCACA,+BAWA,uEAEA,8CACA,+DACA,kF,klJAEA,KAAMA,CAAAA,iBAAiB,CAAGC,OAAO,CAACC,OAAR,CAAgB,SAAhB,CAA1B,CAuBe,cAAeC,CAAAA,KAAf,CACbC,GADa,CAEbC,IAAI,CAAG,IAFM,CAGbC,wBAAwB,CAAG,KAHd,CAIbC,WAAW,CAAG,KAJD,CAKE,CACf,KAAMC,CAAAA,IAAI,CAAGC,eAAOC,SAAP,CAAiB,YAAjB,CAAb,CACA,MAAO,yBAAaF,IAAb,CAAmB,SAAY,4DACpC;AACA,KAAM,CAAEG,cAAF,EAAqB,oBAAQF,eAAOC,SAAP,CAAiB,aAAjB,CAAR,CAAyC,IAClE,uBAAcN,GAAd,CAAmB,KAAnB,CAA0BQ,GAA1B,CADyB,CAA3B,CAIA,KAAMC,CAAAA,MAAM,CAAG,oBAAQJ,eAAOC,SAAP,CAAiB,kBAAjB,CAAR,CAA8C,IAC3D,oBAAWI,kCAAX,CAAmCV,GAAnC,CAAwCC,IAAxC,CADa,CAAf,CAGA,KAAM,CAAEU,MAAF,EAAaF,MAAnB,CACA,KAAMG,CAAAA,OAAO,CAAG,KAAM,yBACpBP,eAAOC,SAAP,CAAiB,kBAAjB,CADoB,CAEpB,IAAM,qCAAgBG,MAAM,CAACI,eAAvB,CAAwCC,aAAxC,CAFc,CAAtB,CAIA,KAAMC,CAAAA,OAAO,CAAGC,cAAKC,IAAL,CAAUjB,GAAV,CAAeS,MAAM,CAACM,OAAtB,CAAhB,CAEA,KAAM,CACJG,OADI,CAEJC,QAFI,CAGJC,SAHI,EAIF,KAAM,yBAAaf,eAAOC,SAAP,CAAiB,oBAAjB,CAAb,CAAqD,IAC7D,8BAAiBG,MAAjB,CADQ,CAJV,CAQA,GAAIY,aAAa,CAACC,IAAd,EAAsB,CAACD,aAAa,CAACE,cAAzC,CAAyD,CACvD,KAAMC,CAAAA,QAAQ,CAAGR,cAAKC,IAAL,CAAUF,OAAV,CAAmB,OAAnB,CAAjB,CACA,KAAMU,CAAAA,QAAQ,CAAG,KAAM,2BAAWD,QAAX,CAAvB,CAEA,GAAI,CAACC,QAAL,CAAe,CACb;AACA;AACAC,OAAO,CAACC,GAAR,CACG,GAAEnB,GAAG,CAACoB,QAAJ,CAAaC,IAAK,uHADvB,EAGD,CACF,CAED,KAAMC,CAAAA,YAAY,CAAG,qBAAc,CACjCC,UAAU,CAAG,GAAEvB,GAAG,CAACoB,QAAJ,CAAaI,IAAK,yCADA,CAAd,CAArB,CAIA,KAAMC,CAAAA,SAAS,CAAG,GAAIC,mBAAJ,CAAc,CAAEnB,OAAF,CAAd,CAAlB,CAEA,KAAMoB,CAAAA,SAAS,CAAGnB,cAAKC,IAAL,CAAUjB,GAAV,CAAe,QAAf,CAAlB,CACA,KAAMoC,CAAAA,QAAQ,CAAG,+BAAapC,GAAb,CAAjB,CACA,KAAMqC,CAAAA,YAAY,CAAG,KAAM,2BAAWF,SAAX,CAA3B,CAEAF,SAAS,CAACK,MAAV,CACE,4BAAgB5B,kCAAhB,CAAwCV,GAAxC,CAA6C,CAC3CuC,UAAU,CAAE,OAD+B,CAE3CC,QAAQ,CAAExB,cAAKyB,QAAL,CAAczC,GAAd,CAAmBoC,QAAnB,EAA8BM,UAA9B,CAAyC,KAAzC,CAFiC,CAG3CC,UAAU,CAAE,CAAC,EAAE,KAAM,oBAAO,UAAP,CAAmB,CAAEC,GAAG,CAAE5C,GAAP,CAAnB,CAAR,CAH8B,CAI3C6C,cAAc,CAAE,IAJ2B,CAA7C,CADF,EASA,6BAAiB7B,cAAKlB,OAAL,CAAaE,GAAb,CAAjB,EAAoC8C,IAApC,CAA0CC,MAAD,EACvCd,SAAS,CAACK,MAAV,CAAiBS,MAAjB,CADF,EAIA,KAAMC,CAAAA,sBAAsB,CAAGC,OAAO,qBAACxC,MAAM,CAACyC,UAAR,eAAC,mBAAmBC,iBAApB,CAAtC,CACA,KAAM,yBAAa9C,eAAOC,SAAP,CAAiB,yBAAjB,CAAb,CAA0D,IAC9D,iDAAsBN,GAAtB,CAA2BoC,QAA3B,CAAqC,CAACY,sBAAtC,CADI,CAAN,CAIA,KAAMI,CAAAA,gBAAgB,CAAG,mCAAuBzC,MAAvB,CAAzB,CAEA,KAAM0C,CAAAA,SAAmB,CAAG,KAAM,yBAChChD,eAAOC,SAAP,CAAiB,eAAjB,CADgC,CAEhC,IAAM,yBAAa8B,QAAb,CAAuB3B,MAAM,CAAC6C,cAA9B,CAF0B,CAAlC,CAKA;AACA;AACA,KAAMC,CAAAA,cAAc,CAAG,GAAIC,CAAAA,GAAJ,EAAvB,CACA,GAAIC,CAAAA,YAAY,CAAG,GAAIC,CAAAA,GAAJ,EAAnB,CAEA,KAAMC,CAAAA,YAA+B,CAAG,CACtCC,aAAa,CAAEC,gBAAOC,WAAP,CAAmB,EAAnB,EAAuBC,QAAvB,CAAgC,KAAhC,CADuB,CAEtCC,qBAAqB,CAAEH,gBAAOC,WAAP,CAAmB,EAAnB,EAAuBC,QAAvB,CAAgC,KAAhC,CAFe,CAGtCE,wBAAwB,CAAEJ,gBAAOC,WAAP,CAAmB,EAAnB,EAAuBC,QAAvB,CAAgC,KAAhC,CAHY,CAAxC,CAMA,KAAMG,CAAAA,WAAW,CAAG,oBAAQ7D,eAAOC,SAAP,CAAiB,sBAAjB,CAAR,CAAkD,IACpE,gCAAmB+C,SAAnB,CAA8B5C,MAAM,CAAC6C,cAArC,CADkB,CAApB,CAGA,KAAMa,CAAAA,WAAW,CAAG,oBAAQ9D,eAAOC,SAAP,CAAiB,oBAAjB,CAAR,CAAgD,IAClE,+BACE4D,WADF,CAEEvD,MAFF,CAGEC,OAHF,CAIE+C,YAJF,CAKElD,MALF,CAMEF,cANF,CADkB,CAApB,CAUA,KAAM6D,CAAAA,QAAQ,CAAGC,MAAM,CAACC,IAAP,CAAYJ,WAAZ,CAAjB,CACA,KAAMK,CAAAA,sBAAgC,CAAG,EAAzC,CACA,KAAMC,CAAAA,kBAAkB,CAAGN,WAAW,CAAC,SAAD,CAAX,CAAuBxB,UAAvB,CACzB,oBADyB,CAA3B,CAGA,KAAM+B,CAAAA,WAAW,CAAGxB,OAAO,CACzBiB,WAAW,CAAC,MAAD,CAAX,EACEA,WAAW,CAAC,MAAD,CAAX,CAAoBxB,UAApB,CAA+B,oBAA/B,CAFuB,CAA3B,CAKA,GAAIL,YAAJ,CAAkB,CAChB,KAAMqC,CAAAA,0BAA0B,CAAG,KAAM,2BACvC1D,cAAKC,IAAL,CAAUkB,SAAV,CAAqB,OAArB,CADuC,CAAzC,CAGA,GAAIuC,0BAAJ,CAAgC,CAC9B,KAAM,IAAIC,CAAAA,KAAJ,CAAUC,yCAAV,CAAN,CACD,CACF,CAED,KAAM,yBACJvE,eAAOC,SAAP,CAAiB,2BAAjB,CADI,CAEJ,SAAY,CACV;AACA;AACA,IAAK,KAAMuE,CAAAA,IAAX,GAAmBX,CAAAA,WAAnB,CAAgC,CAC9B,KAAMY,CAAAA,iBAAiB,CAAG,KAAM,2BAC9B9D,cAAKC,IAAL,CAAUkB,SAAV,CAAqB0C,IAAI,GAAK,GAAT,CAAe,QAAf,CAA0BA,IAA/C,CAD8B,CAE9B,MAF8B,CAAhC,CAIA,GAAIC,iBAAJ,CAAuB,CACrBP,sBAAsB,CAACQ,IAAvB,CAA4BF,IAA5B,EACD,CACF,CAED,KAAMG,CAAAA,cAAc,CAAGT,sBAAsB,CAACU,MAA9C,CAEA,GAAID,cAAJ,CAAoB,CAClB,KAAM,IAAIL,CAAAA,KAAJ,CACH,mCACCK,cAAc,GAAK,CAAnB,CAAuB,MAAvB,CAAgC,QACjC,uEAAsET,sBAAsB,CAACtD,IAAvB,CACrE,IADqE,CAErE,EALE,CAAN,CAOD,CACF,CA1BG,CAAN,CA6BA,KAAMiE,CAAAA,mBAAmB,CAAGd,QAAQ,CAACe,MAAT,CAAiBN,IAAD,EAAU,CACpD,MACEA,CAAAA,IAAI,CAACO,KAAL,CAAW,4BAAX,GAA4CpE,cAAKqE,OAAL,CAAaR,IAAb,IAAuB,GADrE,CAGD,CAJ2B,CAA5B,CAMA,GAAIK,mBAAmB,CAACD,MAAxB,CAAgC,CAC9BzE,GAAG,CAACqB,IAAJ,CACG,8FAAD,CACEqD,mBAAmB,CAACjE,IAApB,CAAyB,IAAzB,CADF,CAEG,qEAHL,EAKD,CAED,KAAMqE,CAAAA,gBAAgB,CAAG,CACvBC,CADuB,CAQvBC,IARuB,GASpB,CACH,KAAMlB,CAAAA,IAAW,CAAG,EAApB,CAEA,KAAMmB,CAAAA,UAAU,CAAG,+BAAaF,CAAC,CAACG,MAAf,CAAuBpB,IAAvB,CAA6B,CAC9CqB,MAAM,CAAE,IADsC,CAE9CC,SAAS,CAAE,KAFmC,CAG9CC,SAAS,CAAE,GAAK;AAH8B,CAA7B,CAAnB,CAMA,MAAO,CACL,GAAGN,CADE,CAEL,IAAIC,IAAI,GAAK,UAAT,CACA,CACEM,UAAU,CAAE,wCAAkBP,CAAlB,CADd,CAEEQ,SAAS,CAAEC,SAFb,CADA,CAKA,EALJ,CAFK,CAQLC,KAAK,CAAE,0CAAoBR,UAAU,CAACC,MAA/B,CARF,CAAP,CAUD,CA5BD,CA8BA,KAAMQ,CAAAA,kBAAkB,CAAGlF,cAAKC,IAAL,CAAUF,OAAV,CAAmBoF,2BAAnB,CAA3B,CACA,KAAMC,CAAAA,cA8BL,CAAG,oBAAQ/F,eAAOC,SAAP,CAAiB,0BAAjB,CAAR,CAAsD,KAAO,CAC/D+F,OAAO,CAAE,CADsD,CAE/DC,QAAQ,CAAE,IAFqD,CAG/DC,QAAQ,CAAE9F,MAAM,CAAC8F,QAH8C,CAI/DnF,SAAS,CAAEA,SAAS,CAACoF,GAAV,CAAejB,CAAD,EAAOD,gBAAgB,CAACC,CAAD,CAAI,UAAJ,CAArC,CAJoD,CAK/DpE,QAAQ,CAAEA,QAAQ,CAACqF,GAAT,CAAcjB,CAAD,EAAOD,gBAAgB,CAACC,CAAD,CAAI,SAAJ,CAApC,CALqD,CAM/DrE,OAAO,CAAEA,OAAO,CAACsF,GAAR,CAAajB,CAAD,EAAOD,gBAAgB,CAACC,CAAD,CAAI,QAAJ,CAAnC,CANsD,CAO/DkB,aAAa,CAAE,2BAAgBrC,QAAhB,EACZe,MADY,CACLuB,qBADK,EAEZF,GAFY,CAEP3B,IAAD,EAAU,CACb,KAAMY,CAAAA,UAAU,CAAG,yBAAcZ,IAAd,CAAnB,CACA,MAAO,CACLA,IADK,CAELoB,KAAK,CAAE,0CAAoBR,UAAU,CAACkB,EAAX,CAAcjB,MAAlC,CAFF,CAGLkB,SAAS,CAAEnB,UAAU,CAACmB,SAHjB,CAILC,UAAU,CAAEpB,UAAU,CAACoB,UAJlB,CAAP,CAMD,CAVY,CAPgD,CAkB/DC,UAAU,CAAE,EAlBmD,CAmB/DC,IAAI,CAAEtG,MAAM,CAACsG,IAAP,EAAef,SAnB0C,CAAP,CAAtD,CA9BJ,CAoDA,KAAMgB,CAAAA,cAAc,CAAG,KAAM,yBAC3B3G,eAAOC,SAAP,CAAiB,gBAAjB,CAD2B,CAE3B,SAAY,CACV,GAAI,CACF,KAAM2G,cAASC,KAAT,CAAenG,OAAf,CAAwB,CAAEoG,SAAS,CAAE,IAAb,CAAxB,CAAN,CACA,MAAO,KAAP,CACD,CAAC,MAAOC,GAAP,CAAY,CACZ,GAAIA,GAAG,CAACC,IAAJ,GAAa,OAAjB,CAA0B,CACxB,MAAO,MAAP,CACD,CACD,KAAMD,CAAAA,GAAN,CACD,CACF,CAZ0B,CAA7B,CAeA,GAAI,CAACJ,cAAD,EAAmB,EAAE,KAAM,6BAAYjG,OAAZ,CAAR,CAAvB,CAAsD,CACpD,KAAM,IAAI4D,CAAAA,KAAJ,CACJ,2FADI,CAAN,CAGD,CAED;AACA;AACA,KAAM,yBAAatE,eAAOC,SAAP,CAAiB,uBAAjB,CAAb,CAAwD,IAC5D2G,aAASK,SAAT,CACEpB,kBADF,CAEEqB,IAAI,CAACC,SAAL,CAAepB,cAAf,CAFF,CAGE,MAHF,CADI,CAAN,CAQA,KAAMqB,CAAAA,YAAY,CAAGzG,cAAKC,IAAL,CACnBF,OADmB,CAEnBqC,gBAAgB,CAAGsE,gCAAH,CAA0BC,4BAFvB,CAGnBC,0BAHmB,CAArB,CAMA,KAAMC,CAAAA,mBAAmB,CAAG,oBAC1BxH,eAAOC,SAAP,CAAiB,gCAAjB,CAD0B,CAE1B,KAAO,CACL+F,OAAO,CAAE,CADJ,CAEL5F,MAAM,CAAE,CACN,GAAGA,MADG,CAENqH,QAAQ,CAAE,KAFJ,CAGNC,UAAU,CAAE/B,SAHN,CAFH,CAOLgC,KAAK,CAAE,CACL7B,2BADK,CAELnF,cAAKyB,QAAL,CAAc1B,OAAd,CAAuB0G,YAAvB,CAFK,CAGLQ,0BAHK,CAILC,8BAJK,CAKLC,mCALK,CAML1H,MAAM,CAAC2H,YAAP,CAAoBC,aAApB,CACIrH,cAAKC,IAAL,CACEmC,gBAAgB,CAAGsE,gCAAH,CAA0BC,4BAD5C,CAEEW,yBAFF,CADJ,CAKI,IAXC,CAYLC,yBAZK,EAcJpD,MAdI,CAcGqD,wBAdH,EAeJhC,GAfI,CAeCiC,IAAD,EAAUzH,cAAKC,IAAL,CAAUR,MAAM,CAACM,OAAjB,CAA0B0H,IAA1B,CAfV,CAPF,CAuBLC,MAAM,CAAE,CACN1H,cAAKyB,QAAL,CACEzC,GADF,CAEEgB,cAAKC,IAAL,CAAUD,cAAKqE,OAAL,CAAaxF,OAAO,CAACC,OAAR,CAAgB,OAAhB,CAAb,CAAV,CAAkD,MAAlD,CAFF,CADM,CAvBH,CAAP,CAF0B,CAA5B,CAkCA,KAAM6I,CAAAA,OAAO,CAAG,KAAM,yBACpBtI,eAAOC,SAAP,CAAiB,yBAAjB,CADoB,CAEpB,IACEsI,OAAO,CAACC,GAAR,CAAY,CACV,2BAAqB7I,GAArB,CAA0B,CACxBY,OADwB,CAExBV,wBAFwB,CAGxB4I,QAAQ,CAAE,KAHc,CAIxBrI,MAJwB,CAKxBE,MALwB,CAMxByB,QANwB,CAOxB+B,WAAW,CAAEA,WAAW,CAAC4E,MAPD,CAQxB5H,QARwB,CAA1B,CADU,CAWV,2BAAqBnB,GAArB,CAA0B,CACxBY,OADwB,CAExBV,wBAFwB,CAGxB4I,QAAQ,CAAE,IAHc,CAIxBrI,MAJwB,CAKxBE,MALwB,CAMxByB,QANwB,CAOxB+B,WAAW,CAAEA,WAAW,CAAC6E,MAPD,CAQxB7H,QARwB,CAA1B,CAXU,CAAZ,CAHkB,CAAtB,CA2BA,KAAM8H,CAAAA,YAAY,CAAGN,OAAO,CAAC,CAAD,CAA5B,CAEA,GACEM,YAAY,CAACC,YAAb,GACCD,YAAY,CAACC,YAAb,CAA0BC,QAA1B,GAAuC,IAAvC,EACEF,YAAY,CAACC,YAAb,CAA0BE,SAA1B,EACCH,YAAY,CAACC,YAAb,CAA0BE,SAA1B,CAAoCnE,MAApC,GAA+C,CAHnD,CADF,CAKE,CACAzE,GAAG,CAACqB,IAAJ,CACG,gIADH,EAGD,CAED,KAAMwH,CAAAA,iBAAiB,CAAGC,OAAO,CAACC,MAAR,EAA1B,CAEA,GAAIC,CAAAA,MAAsB,CAAG,CAAEC,QAAQ,CAAE,EAAZ,CAAgBC,MAAM,CAAE,EAAxB,CAA7B,CACA;AACA,GAAItG,gBAAJ,CAAsB,CACpB,KAAMuG,CAAAA,YAAY,CAAG,KAAM,0BAAYV,YAAZ,CAA3B,CACA;AACA,GAAIU,YAAY,CAACD,MAAb,CAAoBzE,MAApB,CAA6B,CAAjC,CAAoC,CAClCuE,MAAM,CAAG,CACPC,QAAQ,CAAE,CAAC,GAAGE,YAAY,CAACF,QAAjB,CADH,CAEPC,MAAM,CAAE,CAAC,GAAGC,YAAY,CAACD,MAAjB,CAFD,CAAT,CAID,CALD,IAKO,CACL,KAAME,CAAAA,YAAY,CAAG,KAAM,0BAAYjB,OAAO,CAAC,CAAD,CAAnB,CAA3B,CACAa,MAAM,CAAG,CACPC,QAAQ,CAAE,CAAC,GAAGE,YAAY,CAACF,QAAjB,CAA2B,GAAGG,YAAY,CAACH,QAA3C,CADH,CAEPC,MAAM,CAAE,CAAC,GAAGC,YAAY,CAACD,MAAjB,CAAyB,GAAGE,YAAY,CAACF,MAAzC,CAFD,CAAT,CAID,CACF,CAfD,IAeO,CACLF,MAAM,CAAG,KAAM,yBACbnJ,eAAOC,SAAP,CAAiB,sBAAjB,CADa,CAEb,IAAM,0BAAYqI,OAAZ,CAFO,CAAf,CAID,CAED,KAAMkB,CAAAA,eAAe,CAAGP,OAAO,CAACC,MAAR,CAAeF,iBAAf,CAAxB,CACA,GAAIvH,YAAJ,CAAkB,CAChBA,YAAY,CAACgI,cAAb,GACD,CAEDN,MAAM,CAAG,oBAAQnJ,eAAOC,SAAP,CAAiB,yBAAjB,CAAR,CAAqD,IAC5D,mCAAsBkJ,MAAtB,CADO,CAAT,CAIA,GAAIA,MAAM,CAACE,MAAP,CAAczE,MAAd,CAAuB,CAA3B,CAA8B,CAC5B;AACA;AACA,GAAIuE,MAAM,CAACE,MAAP,CAAczE,MAAd,CAAuB,CAA3B,CAA8B,CAC5BuE,MAAM,CAACE,MAAP,CAAczE,MAAd,CAAuB,CAAvB,CACD,CACD,KAAM8E,CAAAA,KAAK,CAAGP,MAAM,CAACE,MAAP,CAAczI,IAAd,CAAmB,MAAnB,CAAd,CAEAS,OAAO,CAACqI,KAAR,CAAcC,eAAMC,GAAN,CAAU,sBAAV,CAAd,EAEA,GACEF,KAAK,CAACG,OAAN,CAAc,oBAAd,EAAsC,CAAC,CAAvC,EACAH,KAAK,CAACG,OAAN,CAAc,mCAAd,EAAqD,CAAC,CAFxD,CAGE,CACA,KAAMC,CAAAA,eAAe,0BAAG,gDAAH,eAArB,CACA,KAAMC,CAAAA,MAAM,CAAGD,eAAe,CAACE,IAAhB,CAAqBN,KAArB,CAAf,CACA,KAAMO,CAAAA,SAAS,CAAGF,MAAM,EAAIA,MAAM,CAACG,MAAjB,EAA2BH,MAAM,CAACG,MAAP,CAAcD,SAA3D,CACA,KAAM,IAAI3F,CAAAA,KAAJ,CACH,yFAAwF2F,SAAU,mFAD/F,CAAN,CAGD,CAED5I,OAAO,CAACqI,KAAR,CAAcA,KAAd,EACArI,OAAO,CAACqI,KAAR,GAEA,GACEA,KAAK,CAACG,OAAN,CAAc,oBAAd,EAAsC,CAAC,CAAvC,EACAH,KAAK,CAACG,OAAN,CAAc,mBAAd,EAAqC,CAAC,CAFxC,CAGE,CACA,KAAM,IAAIvF,CAAAA,KAAJ,CACJ,gHADI,CAAN,CAGD,CACD,KAAM,IAAIA,CAAAA,KAAJ,CAAU,0CAAV,CAAN,CACD,CAlCD,IAkCO,CACL1C,SAAS,CAACK,MAAV,CACE,gCAAoBe,SAApB,CAA+B,CAC7BmH,iBAAiB,CAAEX,eAAe,CAAC,CAAD,CADL,CAA/B,CADF,EAMA,GAAIL,MAAM,CAACC,QAAP,CAAgBxE,MAAhB,CAAyB,CAA7B,CAAgC,CAC9BzE,GAAG,CAACqB,IAAJ,CAAS,0BAAT,EACAH,OAAO,CAACG,IAAR,CAAa2H,MAAM,CAACC,QAAP,CAAgBxI,IAAhB,CAAqB,MAArB,CAAb,EACAS,OAAO,CAACG,IAAR,GACD,CAJD,IAIO,CACLrB,GAAG,CAACwB,IAAJ,CAAS,uBAAT,EACD,CACF,CAED,KAAMyI,CAAAA,kBAAkB,CAAG,qBAAc,CACvC1I,UAAU,CAAG,GAAEvB,GAAG,CAACoB,QAAJ,CAAaI,IAAK,uBADM,CAAd,CAA3B,CAIA,KAAM0I,CAAAA,iBAAiB,CAAG1J,cAAKC,IAAL,CAAUF,OAAV,CAAmBkH,0BAAnB,CAA1B,CAEA,KAAM0C,CAAAA,QAAQ,CAAG,GAAInH,CAAAA,GAAJ,EAAjB,CACA,KAAMoH,CAAAA,sBAAsB,CAAG,GAAIpH,CAAAA,GAAJ,EAA/B,CACA,KAAMqH,CAAAA,wBAAwB,CAAG,GAAIrH,CAAAA,GAAJ,EAAjC,CACA,KAAMsH,CAAAA,WAAW,CAAG,GAAItH,CAAAA,GAAJ,EAApB,CACA,KAAMuH,CAAAA,YAAY,CAAG,GAAIvH,CAAAA,GAAJ,EAArB,CACA,KAAMwH,CAAAA,cAAc,CAAG,GAAIxH,CAAAA,GAAJ,EAAvB,CACA,KAAMyH,CAAAA,gBAAgB,CAAG,GAAIzH,CAAAA,GAAJ,EAAzB,CACA,KAAM0H,CAAAA,kBAAkB,CAAG,GAAIxH,CAAAA,GAAJ,EAA3B,CACA,KAAMyH,CAAAA,yBAAyB,CAAG,GAAIzH,CAAAA,GAAJ,EAAlC,CACA,KAAM0H,CAAAA,SAAS,CAAG,GAAI1H,CAAAA,GAAJ,EAAlB,CACA,KAAM2H,CAAAA,aAAa,CAAG9D,IAAI,CAAC+D,KAAL,CACpB,KAAMrE,cAASsE,QAAT,CAAkB9D,YAAlB,CAAgC,MAAhC,CADc,CAAtB,CAGA,KAAM+D,CAAAA,aAAa,CAAGjE,IAAI,CAAC+D,KAAL,CACpB,KAAMrE,cAASsE,QAAT,CAAkBb,iBAAlB,CAAqC,MAArC,CADc,CAAtB,CAIA,GAAIe,CAAAA,wBAAJ,CACA,GAAIC,CAAAA,YAAJ,CACA,GAAIC,CAAAA,mBAAJ,CACA,KAAMC,CAAAA,aAAa,CAAGtC,OAAO,CAACC,MAAR,EAAtB,CACA,GAAIsC,CAAAA,cAAc,CAAG,KAArB,CAEA,KAAMC,CAAAA,eAAe,CAAGzL,eAAOC,SAAP,CAAiB,cAAjB,CAAxB,CACA,KAAM,CAAEyL,qBAAF,EAA4B,KAAM,yBACtCD,eADsC,CAEtC,SAAY,CACVxC,OAAO,CAAC0C,GAAR,CAAYC,UAAZ,CAAyBvL,kCAAzB,CAEA,KAAMwL,CAAAA,kBAAkB,CAAG,GAAIC,oBAAJ,CAAWvM,iBAAX,CAA8B,CACvDwM,UAAU,CAAE3L,MAAM,CAAC2H,YAAP,CAAoBiE,IADuB,CAEvDC,mBAAmB,CAAE7L,MAAM,CAAC2H,YAAP,CAAoBmE,aAFc,CAA9B,CAA3B,CAKAL,kBAAkB,CAACM,SAAnB,GAA+BC,IAA/B,CAAoCnD,OAAO,CAACoD,MAA5C,EACAR,kBAAkB,CAACS,SAAnB,GAA+BF,IAA/B,CAAoCnD,OAAO,CAACsD,MAA5C,EAEA,KAAMC,CAAAA,gBAAgB,CAAG,CACvBC,mBAAmB,CAAErM,MAAM,CAACqM,mBADL,CAEvBC,mBAAmB,CAAEtM,MAAM,CAACsM,mBAFL,CAAzB,CAKA,KAAMC,CAAAA,kBAAkB,CAAG,KAAM,yBAC/B3M,eAAOC,SAAP,CAAiB,yBAAjB,CAD+B,CAE/B,SACEkE,kBAAkB,GACjB,KAAM,qCACL,yBAAY,SAAZ,CAAuBzD,OAAvB,CAAgCqC,gBAAhC,CADK,CAELyJ,gBAFK,CAGL,KAHK,CADW,CAHW,CAAjC,CAWA,KAAMjE,CAAAA,OAAO,CAACC,GAAR,CACJzE,QAAQ,CAACoC,GAAT,CAAa,KAAO3B,CAAAA,IAAP,EAAgB,CAC3B,MAAO,yBACLxE,eAAOC,SAAP,CAAiB,YAAjB,CAA+B,CAAE2M,UAAU,CAAE,CAAEpI,IAAF,CAAd,CAA/B,CADK,CAEL,SAAY,CACV,KAAMqI,CAAAA,UAAU,CAAG,yCAAkBrI,IAAlB,CAAnB,CACA,KAAM,CAACsI,QAAD,CAAWC,OAAX,EAAsB,KAAM,8BAChCF,UADgC,CAEhCnM,OAFgC,CAGhCyK,aAHgC,CAAlC,CAMA,GAAI6B,CAAAA,KAAK,CAAG,KAAZ,CACA,GAAIC,CAAAA,QAAQ,CAAG,KAAf,CACA,GAAIC,CAAAA,WAAW,CAAG,KAAlB,CACA,GAAIC,CAAAA,aAA8B,CAAG,IAArC,CAEA,KAAMC,CAAAA,eAAe,CAAG,CAAC5I,IAAI,CAACO,KAAL,CACvB,sCADuB,CAAzB,CAIA,GAAIqI,eAAJ,CAAqB,CACnB,KAAMC,CAAAA,YAAY,CAAG,yBACnB7I,IADmB,CAEnB9D,OAFmB,CAGnBqC,gBAHmB,CAArB,CAMA,GAAIqI,wBAAwB,GAAKzF,SAAjC,CAA4C,CAC1CyF,wBAAwB,CAAG,KAAM,qCAC/BrI,gBAAgB,CACZsK,YADY,CAEZ,yBAAY,OAAZ,CAAqB3M,OAArB,CAA8BqC,gBAA9B,CAH2B,CAI/ByJ,gBAJ+B,CAK/B,IAL+B,CAAjC,CAQAnB,YAAY,CAAG,4BACbtI,gBAAgB,CACZsK,YADY,CAEZ,yBAAY,OAAZ,CAAqB3M,OAArB,CAA8BqC,gBAA9B,CAHS,CAIbyJ,gBAJa,CAAf,CAOA,GAAIpB,wBAAJ,CAA8B,CAC5B/J,OAAO,CAACG,IAAR,CACEmI,eAAM2D,IAAN,CAAWC,MAAX,CAAmB,WAAnB,EACE5D,eAAM4D,MAAN,CACG,uJADH,CAFJ,EAMAlM,OAAO,CAACG,IAAR,CACE,sEADF,EAGD,CACF,CAED,GAAI,CACF,GAAIgM,CAAAA,YAAY,CAAG,KAAM,yBACvBxN,eAAOC,SAAP,CAAiB,gBAAjB,CADuB,CAEvB,IAAM,gCACJ,KAAMwN,CAAAA,WAAW,CAAG,EAApB,CAEAC,aAAiBC,WAAjB,CAA6BC,MAA7B,CACEF,aAAiBG,OAAjB,CAAyBC,MAAzB,EADF,CAEEL,WAFF,EAIA,MAAO5B,CAAAA,kBAAkB,CAACkC,YAAnB,CACLvJ,IADK,CAEL6I,YAFK,CAGLb,gBAHK,eAILpM,MAAM,CAACsG,IAJF,eAIL,aAAasH,OAJR,gBAKL5N,MAAM,CAACsG,IALF,eAKL,cAAauH,aALR,CAMLR,WANK,CAAP,CAQD,CAjBsB,CAAzB,CAoBA,GACED,YAAY,CAACP,QAAb,GAA0B,KAA1B,GACCO,YAAY,CAACN,WAAb,EAA4BM,YAAY,CAACU,SAD1C,CADF,CAGE,CACA1C,cAAc,CAAG,IAAjB,CACD,CAED,GAAIgC,YAAY,CAACN,WAAjB,CAA8B,CAC5BA,WAAW,CAAG,IAAd,CACAvC,cAAc,CAACwD,GAAf,CAAmB3J,IAAnB,EACD,CAED,GAAIgJ,YAAY,CAAClC,mBAAjB,CAAsC,CACpCA,mBAAmB,CAAG,IAAtB,CACD,CAED,GAAIkC,YAAY,CAACY,cAAjB,CAAiC,CAC/B9D,QAAQ,CAAC6D,GAAT,CAAa3J,IAAb,EACAwI,KAAK,CAAG,IAAR,CAEA,GACEQ,YAAY,CAACa,eAAb,EACAb,YAAY,CAACc,sBAFf,CAGE,CACAzD,kBAAkB,CAAC0D,GAAnB,CACE/J,IADF,CAEEgJ,YAAY,CAACa,eAFf,EAIAvD,yBAAyB,CAACyD,GAA1B,CACE/J,IADF,CAEEgJ,YAAY,CAACc,sBAFf,EAIAnB,aAAa,CAAGK,YAAY,CAACa,eAA7B,CACD,CAED,GAAIb,YAAY,CAACgB,iBAAb,GAAmC,UAAvC,CAAmD,CACjDhE,wBAAwB,CAAC2D,GAAzB,CAA6B3J,IAA7B,EACD,CAFD,IAEO,IAAIgJ,YAAY,CAACgB,iBAAb,GAAmC,IAAvC,CAA6C,CAClDjE,sBAAsB,CAAC4D,GAAvB,CAA2B3J,IAA3B,EACD,CACF,CAxBD,IAwBO,IAAIgJ,YAAY,CAACiB,cAAjB,CAAiC,CACtC7D,gBAAgB,CAACuD,GAAjB,CAAqB3J,IAArB,EACD,CAFM,IAEA,IACLgJ,YAAY,CAACP,QAAb,EACA7B,wBAAwB,GAAK,KAFxB,CAGL,CACAX,WAAW,CAAC0D,GAAZ,CAAgB3J,IAAhB,EACAyI,QAAQ,CAAG,IAAX,CACD,CAED,GAAI7I,WAAW,EAAII,IAAI,GAAK,MAA5B,CAAoC,CAClC,GACE,CAACgJ,YAAY,CAACP,QAAd,EACA,CAACO,YAAY,CAACY,cAFhB,CAGE,CACA,KAAM,IAAI9J,CAAAA,KAAJ,CAAUoK,4CAAV,CAAN,CACD,CACD;AACA;AACA,GACEtD,wBAAwB,EACxB,CAACoC,YAAY,CAACY,cAFhB,CAGE,CACA3D,WAAW,CAACkE,MAAZ,CAAmBnK,IAAnB,EACD,CACF,CACF,CAAC,MAAOuC,GAAP,CAAY,CACZ,GAAIA,GAAG,CAAC6H,OAAJ,GAAgB,wBAApB,CAA8C,KAAM7H,CAAAA,GAAN,CAC9C2D,YAAY,CAACyD,GAAb,CAAiB3J,IAAjB,EACD,CACF,CAEDuG,SAAS,CAACwD,GAAV,CAAc/J,IAAd,CAAoB,CAClBqK,IAAI,CAAE/B,QADY,CAElBgC,SAAS,CAAE/B,OAFO,CAGlBgC,MAAM,CAAE9B,QAHU,CAIlBD,KAJkB,CAKlBE,WALkB,CAMlBC,aANkB,CAOlB6B,wBAAwB,CAAE,KAPR,CAApB,EASD,CA7JI,CAAP,CA+JD,CAhKD,CADI,CAAN,CAmKAnD,kBAAkB,CAACoD,GAAnB,GAEA,MAAO,CAAEvD,qBAAqB,CAAEiB,kBAAzB,CAAP,CACD,CAnMqC,CAAxC,CAsMA,GAAI,CAACnB,cAAL,CAAqB,CACnBhE,mBAAmB,CAACa,MAApB,CAA2B3D,IAA3B,CACE/D,cAAKyB,QAAL,CACEzC,GADF,CAEEgB,cAAKC,IAAL,CACED,cAAKqE,OAAL,CACExF,OAAO,CAACC,OAAR,CACE,kDADF,CADF,CADF,CAME,MANF,CAFF,CADF,EAaD,CAED,GAAImL,gBAAgB,CAACiE,IAAjB,CAAwB,CAAxB,EAA6BvE,QAAQ,CAACuE,IAAT,CAAgB,CAAjD,CAAoD,CAClD;AACA;AACA9I,cAAc,CAACU,UAAf,CAA4B,2BAAgB,CAC1C,GAAGmE,gBADuC,CAE1C,GAAGN,QAFuC,CAAhB,EAGzBnE,GAHyB,CAGpB3B,IAAD,EAAU,CACf,KAAM0K,CAAAA,QAAQ,CAAG,yCAAkB1K,IAAlB,CAAjB,CACA,KAAM2K,CAAAA,SAAS,CAAGxO,cAAKyO,KAAL,CAAWxO,IAAX,CAChB,aADgB,CAEhBL,OAFgB,CAGf,GAAE2O,QAAS,OAHI,CAAlB,CAMA,GAAIG,CAAAA,cAAJ,CACA,GAAIC,CAAAA,mBAAJ,CACA,GAAI/I,CAAAA,SAAJ,CAEA,GAAI,0BAAe/B,IAAf,CAAJ,CAA0B,CACxB,KAAMY,CAAAA,UAAU,CAAG,yBAAc+J,SAAS,CAACI,OAAV,CAAkB,SAAlB,CAA6B,EAA7B,CAAd,CAAnB,CAEAF,cAAc,CAAG,0CACfjK,UAAU,CAACkB,EAAX,CAAcjB,MAAd,CAAqBkK,OAArB,CAA6B,kBAA7B,CAAiD,UAAjD,CADe,CAAjB,CAGAD,mBAAmB,CAAGlK,UAAU,CAACoB,UAAX,CAAuB+I,OAAvB,CACpB,gBADoB,CAEpB,UAFoB,CAAtB,CAIAhJ,SAAS,CAAGnB,UAAU,CAACmB,SAAvB,CACD,CAXD,IAWO,CACL8I,cAAc,CAAG,0CACf,GAAIG,CAAAA,MAAJ,CACG,IAAG7O,cAAKyO,KAAL,CAAWxO,IAAX,CACF,aADE,CAEF,gCAAmBL,OAAnB,CAFE,CAGD,GAAE2O,QAAS,OAHV,CAIF,GALJ,EAME7J,MAPa,CAAjB,CASD,CAED,MAAO,CACLb,IADK,CAEL+B,SAFK,CAGL8I,cAHK,CAILC,mBAJK,CAAP,CAMD,CA5C2B,CAA5B,CA8CA,KAAM1I,cAASK,SAAT,CACJpB,kBADI,CAEJqB,IAAI,CAACC,SAAL,CAAepB,cAAf,CAFI,CAGJ,MAHI,CAAN,CAKD,CAED;AACA;AACA,KAAM0J,CAAAA,YAAY,CAChB,CAACrE,wBAAD,GAA8B,CAACM,qBAAD,EAA0BtH,WAAxD,CADF,CAGA,GAAIsG,YAAY,CAACmE,IAAb,CAAoB,CAAxB,CAA2B,CACzB,KAAM,IAAIvK,CAAAA,KAAJ,CACH,wCACCoG,YAAY,CAACmE,IAAb,GAAsB,CAAtB,CAA0B,EAA1B,CAA+B,GAChC,qDAAoD,CAAC,GAAGnE,YAAJ,EAClDvE,GADkD,CAC7CuJ,EAAD,EAAS,QAAOA,EAAG,EAD2B,EAElD9O,IAFkD,CAGjD,IAHiD,CAIjD,qFAPA,CAAN,CASD,CAED,KAAM,+BAAaF,OAAb,CAAsBH,OAAtB,CAAN,CAEA,KAAMqG,cAASK,SAAT,CACJtG,cAAKC,IAAL,CAAUF,OAAV,CAAmBiP,iCAAnB,CADI,CAEJzI,IAAI,CAACC,SAAL,CAAeK,mBAAf,CAFI,CAGJ,MAHI,CAAN,CAMA,KAAMoI,CAAAA,oBAAmD,CAAG,EAA5D,CACA,KAAMC,CAAAA,kBAA4B,CAAG,EAArC,CACA,GAAIC,CAAAA,gBAA0B,CAAG,EAAjC,CAEA,GAAI1F,kBAAJ,CAAwBA,kBAAkB,CAACX,cAAnB,GAExB,KAAM,CAAE/C,IAAF,EAAWtG,MAAjB,CAEA,KAAM,yBAAaJ,eAAOC,SAAP,CAAiB,mBAAjB,CAAb,CAAoD,SAAY,CACpE,GAAIwK,WAAW,CAACoE,IAAZ,CAAmB,CAAnB,EAAwBvE,QAAQ,CAACuE,IAAT,CAAgB,CAAxC,EAA6CY,YAAjD,CAA+D,CAC7D,KAAMM,CAAAA,aAAa,CAAG,CAAC,GAAGtF,WAAJ,CAAiB,GAAGH,QAApB,CAAtB,CAEA,mCACE,CACE,GAAGyF,aADL,CAEE,GAAGhM,QAAQ,CAACe,MAAT,CAAiBN,IAAD,EAAU,CAACuL,aAAa,CAACC,QAAd,CAAuBxL,IAAvB,CAA3B,CAFL,CADF,CAKE8F,QALF,CAMEO,kBANF,EAQA,KAAMoF,CAAAA,SAAS,CAAGzQ,OAAO,CAAC,WAAD,CAAP,CAAqB0Q,OAAvC,CACA,KAAMC,CAAAA,aAAa,CAAG,CACpBC,MAAM,CAAE,KADY,CAEpBC,WAAW,CAAE,IAFO,CAGpBC,OAAO,CAAElQ,MAAM,CAAC2H,YAAP,CAAoBiE,IAHT,CAIpBuE,KAAK,CAAER,aAJa,CAKpBS,MAAM,CAAE7P,cAAKC,IAAL,CAAUF,OAAV,CAAmB,QAAnB,CALY,CAMpB+P,aAAa,CAAE,yBANK,CAAtB,CAQA,KAAMC,CAAAA,YAAiB,CAAG,CACxB,GAAGtQ,MADqB,CAExBuQ,0BAA0B,CAAE,EAFJ,CAGxBb,gBAAgB,CAAE,EAHM,CAIxB;AACA;AACA;AACA;AACAc,aAAa,CAAGC,UAAD,EAAqB,CAClC;AACA;AACA;AACA;AACA;AACA;AACAvG,QAAQ,CAACwG,OAAT,CAAkBtM,IAAD,EAAU,CACzB,GAAI,0BAAeA,IAAf,CAAJ,CAA0B,CACxBqL,kBAAkB,CAACnL,IAAnB,CAAwBF,IAAxB,EAEA,GAAI+F,sBAAsB,CAACwG,GAAvB,CAA2BvM,IAA3B,CAAJ,CAAsC,CACpC;AACA;AACA,GAAIkC,IAAJ,CAAU,CACRmK,UAAU,CAAE,IAAGnK,IAAI,CAACuH,aAAc,GAAEzJ,IAAK,EAA/B,CAAV,CAA8C,CAC5CA,IAD4C,CAE5CwM,KAAK,CAAE,CAAEC,cAAc,CAAE,IAAlB,CAFqC,CAA9C,CAID,CALD,IAKO,CACLJ,UAAU,CAACrM,IAAD,CAAV,CAAmB,CAAEA,IAAF,CAAQwM,KAAK,CAAE,CAAEC,cAAc,CAAE,IAAlB,CAAf,CAAnB,CACD,CACF,CAXD,IAWO,CACL;AACA;AACA,MAAOJ,CAAAA,UAAU,CAACrM,IAAD,CAAjB,CACD,CACF,CACF,CArBD,EAsBA;AACA;AACAqG,kBAAkB,CAACiG,OAAnB,CAA2B,CAACI,MAAD,CAAS1M,IAAT,GAAkB,CAC3C,KAAM2M,CAAAA,aAAa,CAAGrG,yBAAyB,CAACsG,GAA1B,CAA8B5M,IAA9B,CAAtB,CAEA0M,MAAM,CAACJ,OAAP,CAAe,CAACO,KAAD,CAAQC,QAAR,GAAqB,CAClCT,UAAU,CAACQ,KAAD,CAAV,CAAoB,CAClB7M,IADkB,CAElBwM,KAAK,CAAE,CAAEO,aAAa,CAAEJ,aAAF,cAAEA,aAAa,CAAGG,QAAH,CAA9B,CAFW,CAApB,CAID,CALD,EAMD,CATD,EAWA,GAAI7B,YAAJ,CAAkB,CAChBoB,UAAU,CAAC,MAAD,CAAV,CAAqB,CACnBrM,IAAI,CAAEJ,WAAW,CAAG,MAAH,CAAY,SADV,CAArB,CAGD,CAED,GAAIsC,IAAJ,CAAU,CACR,IAAK,KAAMlC,CAAAA,IAAX,GAAmB,CACjB,GAAGiG,WADc,CAEjB,GAAGH,QAFc,CAGjB,IAAImF,YAAY,CAAG,CAAC,MAAD,CAAH,CAAc,EAA9B,CAHiB,CAAnB,CAIG,CACD,KAAMzC,CAAAA,KAAK,CAAG1C,QAAQ,CAACyG,GAAT,CAAavM,IAAb,CAAd,CACA,KAAMgN,CAAAA,SAAS,CAAG,0BAAehN,IAAf,CAAlB,CACA,KAAMiN,CAAAA,UAAU,CAAGzE,KAAK,EAAIzC,sBAAsB,CAACwG,GAAvB,CAA2BvM,IAA3B,CAA5B,CAEA,IAAK,KAAMkN,CAAAA,MAAX,GAAqBhL,CAAAA,IAAI,CAACsH,OAA1B,CAAmC,sBACjC;AACA,GAAIhB,KAAK,EAAIwE,SAAT,EAAsB,CAACC,UAA3B,CAAuC,SACvC,KAAME,CAAAA,UAAU,CAAI,IAAGD,MAAO,GAAElN,IAAI,GAAK,GAAT,CAAe,EAAf,CAAoBA,IAAK,EAAzD,CAEAqM,UAAU,CAACc,UAAD,CAAV,CAAyB,CACvBnN,IAAI,CAAE,mBAAAqM,UAAU,CAACrM,IAAD,CAAV,gCAAkBA,IAAlB,GAA0BA,IADT,CAEvBwM,KAAK,CAAE,CAAEY,YAAY,CAAEF,MAAhB,CAFgB,CAAzB,CAKA,GAAID,UAAJ,CAAgB,CACdZ,UAAU,CAACc,UAAD,CAAV,CAAuBX,KAAvB,CAA6BC,cAA7B,CAA8C,IAA9C,CACD,CACF,CAED,GAAIjE,KAAJ,CAAW,CACT;AACA,MAAO6D,CAAAA,UAAU,CAACrM,IAAD,CAAjB,CACD,CACF,CACF,CAED,MAAOqM,CAAAA,UAAP,CACD,CAzFuB,CA0FxBgB,aAAa,CAAE,KA1FS,CAA1B,CA6FA,KAAM5B,CAAAA,SAAS,CAACtQ,GAAD,CAAMwQ,aAAN,CAAqBO,YAArB,CAAf,CAEA,KAAMoB,CAAAA,gBAAgB,CAAG,qBAAc,CACrCpQ,UAAU,CAAG,GAAEvB,GAAG,CAACoB,QAAJ,CAAaI,IAAK,+BADI,CAAd,CAAzB,CAGAmO,gBAAgB,CAAGY,YAAY,CAACZ,gBAAhC,CAEA;AACA,IAAK,KAAMtL,CAAAA,IAAX,GAAmBiG,CAAAA,WAAnB,CAAgC,CAC9B,KAAM4C,CAAAA,YAAY,CAAG,yBAAY7I,IAAZ,CAAkB9D,OAAlB,CAA2BqC,gBAA3B,CAArB,CACA,KAAM6D,cAASmL,MAAT,CAAgB1E,YAAhB,CAAN,CACD,CACD,KAAM2E,CAAAA,eAAe,CAAGrR,cAAKC,IAAL,CACtBF,OADsB,CAEtBqC,gBAAgB,CAAGsE,gCAAH,CAA0BC,4BAFpB,CAAxB,CAKA,KAAM2K,CAAAA,gBAAgB,CAAG,MACvBC,UADuB,CAEvB1N,IAFuB,CAGvB4D,IAHuB,CAIvB4E,KAJuB,CAKvBmF,GALuB,CAMvBC,iBAAiB,CAAG,KANG,GAOpB,CACH,MAAO,yBACLpS,eAAOC,SAAP,CAAiB,oBAAjB,CADK,CAEL,SAAY,CACVmI,IAAI,CAAI,GAAEA,IAAK,IAAG+J,GAAI,EAAtB,CACA,KAAME,CAAAA,IAAI,CAAG1R,cAAKC,IAAL,CAAUuP,aAAa,CAACK,MAAxB,CAAgCpI,IAAhC,CAAb,CACA,KAAM8G,CAAAA,QAAQ,CAAG,yBACfgD,UADe,CAEfxR,OAFe,CAGfqC,gBAHe,CAAjB,CAMA,KAAMuP,CAAAA,YAAY,CAAG3R,cAClByB,QADkB,CAEjB4P,eAFiB,CAGjBrR,cAAKC,IAAL,CACED,cAAKC,IAAL,CACEsO,QADF,CAEE;AACA;AACAgD,UAAU,CACPK,MADH,CACU,CADV,EAEGC,KAFH,CAES,GAFT,EAGGrM,GAHH,CAGO,IAAM,IAHb,EAIGvF,IAJH,CAIQ,GAJR,CAJF,CADF,CAWEwH,IAXF,CAHiB,EAiBlBmH,OAjBkB,CAiBV,KAjBU,CAiBH,GAjBG,CAArB,CAmBA,KAAMkD,CAAAA,IAAI,CAAG9R,cAAKC,IAAL,CACXF,OADW,CAEXqC,gBAAgB,CAAGsE,gCAAH,CAA0BC,4BAF/B,CAGXgL,YAHW,CAAb,CAMA,GAAI,CAACtF,KAAL,CAAY,CACVhC,aAAa,CAACxG,IAAD,CAAb,CAAsB8N,YAAtB,CACD,CAED,KAAMI,CAAAA,UAAU,CAAG5C,gBAAgB,CAACE,QAAjB,CAA0BxL,IAA1B,CAAnB,CAEA;AACA;AACA;AACA,GAAI,CAAC,CAACkC,IAAD,EAAS0L,iBAAV,GAAgC,CAACM,UAArC,CAAiD,CAC/C,KAAM9L,cAASC,KAAT,CAAelG,cAAKqE,OAAL,CAAayN,IAAb,CAAf,CAAmC,CAAE3L,SAAS,CAAE,IAAb,CAAnC,CAAN,CACA,KAAMF,cAAS+L,MAAT,CAAgBN,IAAhB,CAAsBI,IAAtB,CAAN,CACD,CAHD,IAGO,IAAI/L,IAAI,EAAI,CAACsG,KAAb,CAAoB,CACzB;AACA;AACA,MAAOhC,CAAAA,aAAa,CAACxG,IAAD,CAApB,CACD,CAED,GAAIkC,IAAJ,CAAU,CACR,GAAI0L,iBAAJ,CAAuB,OAEvB,IAAK,KAAMV,CAAAA,MAAX,GAAqBhL,CAAAA,IAAI,CAACsH,OAA1B,CAAmC,CACjC,KAAM4E,CAAAA,OAAO,CAAI,IAAGlB,MAAO,GAAElN,IAAI,GAAK,GAAT,CAAe,EAAf,CAAoBA,IAAK,EAAtD,CACA,KAAMqO,CAAAA,SAAS,CAAGrO,IAAI,GAAK,GAAT,CAAe7D,cAAKmS,OAAL,CAAa1K,IAAb,CAAf,CAAoC,EAAtD,CACA,KAAM2K,CAAAA,mBAAmB,CAAGT,YAAY,CAACC,MAAb,CAC1B,SAAS3N,MADiB,CAA5B,CAIA,GAAIoI,KAAK,EAAI8C,gBAAgB,CAACE,QAAjB,CAA0B4C,OAA1B,CAAb,CAAiD,CAC/C,SACD,CAED,KAAMI,CAAAA,mBAAmB,CAAGrS,cACzBC,IADyB,CAExB,OAFwB,CAGxB8Q,MAAM,CAAGmB,SAHe,CAIxB;AACA;AACArO,IAAI,GAAK,GAAT,CAAe,EAAf,CAAoBuO,mBANI,EAQzBxD,OARyB,CAQjB,KARiB,CAQV,GARU,CAA5B,CAUA,KAAM0D,CAAAA,WAAW,CAAGtS,cAAKC,IAAL,CAClBuP,aAAa,CAACK,MADI,CAElBkB,MAAM,CAAGmB,SAFS,CAGlBrO,IAAI,GAAK,GAAT,CAAe,EAAf,CAAoB4D,IAHF,CAApB,CAKA,KAAM8K,CAAAA,WAAW,CAAGvS,cAAKC,IAAL,CAClBF,OADkB,CAElBqC,gBAAgB,CAAGsE,gCAAH,CAA0BC,4BAFxB,CAGlB0L,mBAHkB,CAApB,CAMA,GAAI,CAAChG,KAAL,CAAY,CACVhC,aAAa,CAAC4H,OAAD,CAAb,CAAyBI,mBAAzB,CACD,CACD,KAAMpM,cAASC,KAAT,CAAelG,cAAKqE,OAAL,CAAakO,WAAb,CAAf,CAA0C,CAC9CpM,SAAS,CAAE,IADmC,CAA1C,CAAN,CAGA,KAAMF,cAAS+L,MAAT,CAAgBM,WAAhB,CAA6BC,WAA7B,CAAN,CACD,CACF,CACF,CAlGI,CAAP,CAoGD,CA5GD,CA8GA;AACA,GAAI,CAAC9O,WAAD,EAAgBqL,YAApB,CAAkC,CAChC,KAAMwC,CAAAA,gBAAgB,CAAC,SAAD,CAAY,MAAZ,CAAoB,MAApB,CAA4B,KAA5B,CAAmC,MAAnC,CAAtB,CACD,CAED,IAAK,KAAMzN,CAAAA,IAAX,GAAmBuL,CAAAA,aAAnB,CAAkC,CAChC,KAAM/C,CAAAA,KAAK,CAAG1C,QAAQ,CAACyG,GAAT,CAAavM,IAAb,CAAd,CACA,KAAM2O,CAAAA,mBAAmB,CAAG5I,sBAAsB,CAACwG,GAAvB,CAA2BvM,IAA3B,CAA5B,CACA,KAAMgN,CAAAA,SAAS,CAAG,0BAAehN,IAAf,CAAlB,CACA,KAAM4O,CAAAA,MAAM,CAAGzI,cAAc,CAACoG,GAAf,CAAmBvM,IAAnB,CAAf,CACA,KAAM4D,CAAAA,IAAI,CAAG,yCAAkB5D,IAAlB,CAAb,CAEA;AACA;AACA;AACA,KAAM6O,CAAAA,aAAa,CAAG,EAAErG,KAAK,EAAIwE,SAAT,EAAsB,CAAC2B,mBAAzB,CAAtB,CAEA,GAAIE,aAAJ,CAAmB,CACjB,KAAMpB,CAAAA,gBAAgB,CAACzN,IAAD,CAAOA,IAAP,CAAa4D,IAAb,CAAmB4E,KAAnB,CAA0B,MAA1B,CAAtB,CACD,CAED,GAAIoG,MAAM,GAAK,CAACpG,KAAD,EAAWA,KAAK,EAAI,CAACwE,SAA1B,CAAV,CAAiD,CAC/C,KAAM8B,CAAAA,OAAO,CAAI,GAAElL,IAAK,MAAxB,CACA,KAAM6J,CAAAA,gBAAgB,CAACzN,IAAD,CAAO8O,OAAP,CAAgBA,OAAhB,CAAyBtG,KAAzB,CAAgC,MAAhC,CAAtB,CAEA,GAAIA,KAAJ,CAAW,CACT,KAAMiF,CAAAA,gBAAgB,CAACzN,IAAD,CAAO8O,OAAP,CAAgBA,OAAhB,CAAyBtG,KAAzB,CAAgC,MAAhC,CAAtB,CACD,CACF,CAED,GAAIA,KAAJ,CAAW,CACT;AACA;AACA,GAAI,CAACwE,SAAL,CAAgB,CACd,KAAMS,CAAAA,gBAAgB,CAACzN,IAAD,CAAOA,IAAP,CAAa4D,IAAb,CAAmB4E,KAAnB,CAA0B,MAA1B,CAAtB,CAEA,GAAItG,IAAJ,CAAU,CACR;AACA,IAAK,KAAMgL,CAAAA,MAAX,GAAqBhL,CAAAA,IAAI,CAACsH,OAA1B,CAAmC,CACjC,KAAMuF,CAAAA,UAAU,CAAI,IAAG7B,MAAO,GAAElN,IAAI,GAAK,GAAT,CAAe,EAAf,CAAoBA,IAAK,EAAzD,CAEA,GAAI,CAACsL,gBAAgB,CAACE,QAAjB,CAA0BuD,UAA1B,CAAL,CAA4C,CAC1C3D,oBAAoB,CAAC2D,UAAD,CAApB,CAAmC,CACjCvE,wBAAwB,CACtB0B,YAAY,CAACC,0BAAb,CAAwC4C,UAAxC,CAF+B,CAGjCC,QAAQ,CAAE,IAHuB,CAIjCrE,SAAS,CAAExO,cAAKyO,KAAL,CAAWxO,IAAX,CACT,aADS,CAETL,OAFS,CAGR,GAAE6H,IAAK,OAHC,CAJsB,CAAnC,CAUD,CACF,CACF,CAlBD,IAkBO,CACLwH,oBAAoB,CAACpL,IAAD,CAApB,CAA6B,CAC3BwK,wBAAwB,CACtB0B,YAAY,CAACC,0BAAb,CAAwCnM,IAAxC,CAFyB,CAG3BgP,QAAQ,CAAE,IAHiB,CAI3BrE,SAAS,CAAExO,cAAKyO,KAAL,CAAWxO,IAAX,CACT,aADS,CAETL,OAFS,CAGR,GAAE6H,IAAK,OAHC,CAJgB,CAA7B,CAUD,CACD;AACA,KAAMqL,CAAAA,QAAQ,CAAG1I,SAAS,CAACqG,GAAV,CAAc5M,IAAd,CAAjB,CACA,GAAIiP,QAAJ,CAAc,CACZA,QAAQ,CAACzE,wBAAT,CACE0B,YAAY,CAACC,0BAAb,CAAwCnM,IAAxC,CADF,CAEAuG,SAAS,CAACwD,GAAV,CAAc/J,IAAd,CAAoBiP,QAApB,EACD,CACF,CAxCD,IAwCO,CACL;AACA;AACA;AACA;AACA,KAAMC,CAAAA,WAAW,CAAG7I,kBAAkB,CAACuG,GAAnB,CAAuB5M,IAAvB,GAAgC,EAApD,CACA,IAAK,KAAM6M,CAAAA,KAAX,GAAoBqC,CAAAA,WAApB,CAAiC,CAC/B,KAAMC,CAAAA,QAAQ,CAAG,yCAAkBtC,KAAlB,CAAjB,CACA,KAAMY,CAAAA,gBAAgB,CACpBzN,IADoB,CAEpB6M,KAFoB,CAGpBsC,QAHoB,CAIpB3G,KAJoB,CAKpB,MALoB,CAMpB,IANoB,CAAtB,CAQA,KAAMiF,CAAAA,gBAAgB,CACpBzN,IADoB,CAEpB6M,KAFoB,CAGpBsC,QAHoB,CAIpB3G,KAJoB,CAKpB,MALoB,CAMpB,IANoB,CAAtB,CASA,GAAIoG,MAAJ,CAAY,CACV,KAAME,CAAAA,OAAO,CAAI,GAAEK,QAAS,MAA5B,CACA,KAAM1B,CAAAA,gBAAgB,CACpBzN,IADoB,CAEpB8O,OAFoB,CAGpBA,OAHoB,CAIpBtG,KAJoB,CAKpB,MALoB,CAMpB,IANoB,CAAtB,CAQA,KAAMiF,CAAAA,gBAAgB,CACpBzN,IADoB,CAEpB8O,OAFoB,CAGpBA,OAHoB,CAIpBtG,KAJoB,CAKpB,MALoB,CAMpB,IANoB,CAAtB,CAQD,CAED4C,oBAAoB,CAACyB,KAAD,CAApB,CAA8B,CAC5BrC,wBAAwB,CACtB0B,YAAY,CAACC,0BAAb,CAAwCU,KAAxC,CAF0B,CAG5BmC,QAAQ,CAAEhP,IAHkB,CAI5B2K,SAAS,CAAExO,cAAKyO,KAAL,CAAWxO,IAAX,CACT,aADS,CAETL,OAFS,CAGR,GAAE,yCAAkB8Q,KAAlB,CAAyB,OAHnB,CAJiB,CAA9B,CAWA;AACA,KAAMoC,CAAAA,QAAQ,CAAG1I,SAAS,CAACqG,GAAV,CAAcC,KAAd,CAAjB,CACA,GAAIoC,QAAJ,CAAc,CACZA,QAAQ,CAACzE,wBAAT,CACE0B,YAAY,CAACC,0BAAb,CAAwCU,KAAxC,CADF,CAEAtG,SAAS,CAACwD,GAAV,CAAc8C,KAAd,CAAqBoC,QAArB,EACD,CACF,CACF,CACF,CACF,CAED;AACA,KAAM,qCAAgBtD,aAAa,CAACK,MAA9B,CAAN,CACA,KAAM5J,cAASgN,KAAT,CAAezD,aAAa,CAACK,MAA7B,CAAN,CACA,KAAM5J,cAASK,SAAT,CACJG,YADI,CAEJF,IAAI,CAACC,SAAL,CAAe6D,aAAf,CAA8B,IAA9B,CAAoC,CAApC,CAFI,CAGJ,MAHI,CAAN,CAMA,GAAI8G,gBAAJ,CAAsBA,gBAAgB,CAACrI,cAAjB,GACtBpI,OAAO,CAACC,GAAR,GACD,CACF,CA1YK,CAAN,CA4YA,KAAMuS,CAAAA,WAAW,CAAG5K,OAAO,CAACC,MAAR,CAAeqC,aAAf,CAApB,CACA3J,SAAS,CAACK,MAAV,CACE,+BAAmBe,SAAnB,CAA8B,CAC5BmH,iBAAiB,CAAE0J,WAAW,CAAC,CAAD,CADF,CAE5BC,eAAe,CAAErJ,WAAW,CAACoE,IAFD,CAG5BkF,oBAAoB,CAAEzJ,QAAQ,CAACuE,IAHH,CAI5BmF,oBAAoB,CAAEpJ,gBAAgB,CAACiE,IAJX,CAK5BoF,YAAY,CACVjR,SAAS,CAAC4B,MAAV,EACC6F,WAAW,CAACoE,IAAZ,CAAmBvE,QAAQ,CAACuE,IAA5B,CAAmCjE,gBAAgB,CAACiE,IADrD,CAN0B,CAQ5BqF,YAAY,CAAEzE,YARc,CAS5B0E,kBAAkB,uCAAE9I,YAAF,eAAE,cAAc2E,QAAd,CAAuB,iBAAvB,CAAF,8BAA+C,KATrC,CAU5BoE,aAAa,CAAEtT,QAAQ,CAAC8D,MAVI,CAW5ByP,YAAY,CAAExT,OAAO,CAAC+D,MAXM,CAY5B0P,cAAc,CAAEvT,SAAS,CAAC6D,MAAV,CAAmB,CAAG;AAZV,CAA9B,CADF,EAiBA,GAAI0F,QAAQ,CAACuE,IAAT,CAAgB,CAApB,CAAuB,mBACrB,KAAM0F,CAAAA,kBAAsD,CAAG,EAA/D,CACA1E,kBAAkB,CAACiB,OAAnB,CAA4B0D,QAAD,EAAc,CACvC,KAAMC,CAAAA,eAAe,CAAG,yCAAkBD,QAAlB,CAAxB,CACA,KAAMrF,CAAAA,SAAS,CAAGxO,cAAKyO,KAAL,CAAWxO,IAAX,CAChB,aADgB,CAEhBL,OAFgB,CAGf,GAAEkU,eAAgB,OAHH,CAAlB,CAMAF,kBAAkB,CAACC,QAAD,CAAlB,CAA+B,CAC7BpP,UAAU,CAAE,0CAAoB,yBAAcoP,QAAd,EAAwBlO,EAAxB,CAA2BjB,MAA/C,CADiB,CAE7B8J,SAF6B,CAG7BuF,QAAQ,CAAElK,wBAAwB,CAACuG,GAAzB,CAA6ByD,QAA7B,EACN,IADM,CAENjK,sBAAsB,CAACwG,GAAvB,CAA2ByD,QAA3B,EACC,GAAEC,eAAgB,OADnB,CAEA,KAPyB,CAQ7BpF,cAAc,CAAE,0CACd,yBAAcF,SAAS,CAACI,OAAV,CAAkB,SAAlB,CAA6B,EAA7B,CAAd,EAAgDjJ,EAAhD,CAAmDjB,MAAnD,CAA0DkK,OAA1D,CACE,kBADF,CAEE,UAFF,CADc,CARa,CAA/B,CAeD,CAvBD,EAwBA,KAAMoF,CAAAA,iBAAoC,CAAG,CAC3C3O,OAAO,CAAE,CADkC,CAE3CkL,MAAM,CAAEtB,oBAFmC,CAG3CxJ,aAAa,CAAEmO,kBAH4B,CAI3CK,cAAc,CAAE9E,gBAJ2B,CAK3C+E,OAAO,CAAEvR,YALkC,CAA7C,CAQA,KAAMsD,cAASK,SAAT,CACJtG,cAAKC,IAAL,CAAUF,OAAV,CAAmBmH,8BAAnB,CADI,CAEJX,IAAI,CAACC,SAAL,CAAewN,iBAAf,CAFI,CAGJ,MAHI,CAAN,CAKA,KAAMG,CAAAA,yBAAyB,CAACH,iBAAD,CAAoB,CACjDjU,OADiD,CAEjDH,OAFiD,CAGjDyN,OAAO,CAAE,gBAAA5N,MAAM,CAACsG,IAAP,6BAAasH,OAAb,GAAwB,EAHgB,CAApB,CAA/B,CAKD,CA5CD,IA4CO,CACL,KAAM2G,CAAAA,iBAAoC,CAAG,CAC3C3O,OAAO,CAAE,CADkC,CAE3CkL,MAAM,CAAE,EAFmC,CAG3C9K,aAAa,CAAE,EAH4B,CAI3CyO,OAAO,CAAEvR,YAJkC,CAK3CsR,cAAc,CAAE,EAL2B,CAA7C,CAOA,KAAMhO,cAASK,SAAT,CACJtG,cAAKC,IAAL,CAAUF,OAAV,CAAmBmH,8BAAnB,CADI,CAEJX,IAAI,CAACC,SAAL,CAAewN,iBAAf,CAFI,CAGJ,MAHI,CAAN,CAKD,CAED,KAAMI,CAAAA,MAAM,CAAG,CAAE,GAAG3U,MAAM,CAAC2U,MAAZ,CAAf,CACA,KAAM,CAAEC,WAAF,CAAeC,UAAf,EAA8BF,MAApC,CACAA,MAAM,CAACG,KAAP,CAAe,CAAC,GAAGF,WAAJ,CAAiB,GAAGC,UAApB,CAAf,CAEA,KAAMrO,cAASK,SAAT,CACJtG,cAAKC,IAAL,CAAUF,OAAV,CAAmByU,2BAAnB,CADI,CAEJjO,IAAI,CAACC,SAAL,CAAe,CACbnB,OAAO,CAAE,CADI,CAEb+O,MAFa,CAAf,CAFI,CAMJ,MANI,CAAN,CASA,KAAMnO,cAASK,SAAT,CACJtG,cAAKC,IAAL,CAAUF,OAAV,CAAmB0U,yBAAnB,CADI,CAEJlO,IAAI,CAACC,SAAL,CAAe,CACbnB,OAAO,CAAE,CADI,CAEbqP,gBAAgB,CAAE,MAAOjV,CAAAA,MAAM,CAACwQ,aAAd,GAAgC,UAFrC,CAGb0E,mBAAmB,CAAElV,MAAM,CAACyR,aAAP,GAAyB,IAHjC,CAIbvG,mBAAmB,CAAEA,mBAAmB,GAAK,IAJhC,CAAf,CAFI,CAQJ,MARI,CAAN,CAUA,KAAM1E,cAASmL,MAAT,CAAgBpR,cAAKC,IAAL,CAAUF,OAAV,CAAmB6U,yBAAnB,CAAhB,EAAmDC,KAAnD,CAA0DzO,GAAD,EAAS,CACtE,GAAIA,GAAG,CAACC,IAAJ,GAAa,QAAjB,CAA2B,CACzB,MAAOuB,CAAAA,OAAO,CAAC9I,OAAR,EAAP,CACD,CACD,MAAO8I,CAAAA,OAAO,CAACkN,MAAR,CAAe1O,GAAf,CAAP,CACD,CALK,CAAN,CAOA0D,WAAW,CAACqG,OAAZ,CAAqBpB,EAAD,EAAQxM,cAAc,CAACiL,GAAf,CAAmBuB,EAAnB,CAA5B,EACA3E,SAAS,CAAC+F,OAAV,CAAkB,CAACnP,IAAD,CAAiB+T,GAAjB,GAAiC,CACjDtS,YAAY,CAACmL,GAAb,CAAiBmH,GAAjB,CAAsB/T,IAAtB,EACD,CAFD,EAIA,KAAM,yBAAa3B,eAAOC,SAAP,CAAiB,iBAAjB,CAAb,CAAkD,IACtD,0BAAc+D,MAAM,CAACC,IAAP,CAAYJ,WAAZ,CAAd,CAAwCT,YAAxC,CAAsDL,gBAAtD,CAAwE,CACtE4S,QAAQ,CAAEjV,OAD4D,CAEtEH,OAAO,CAAEA,OAF6D,CAGtEwB,QAHsE,CAItE0N,YAJsE,CAKtExM,cAAc,CAAE7C,MAAM,CAAC6C,cAL+C,CAMtEkI,aANsE,CAAxE,CADI,CAAN,CAWA,GAAIrL,WAAJ,CAAiB,CACf,oBAAQE,eAAOC,SAAP,CAAiB,qBAAjB,CAAR,CAAiD,IAC/C,8BAAkB,CAAEc,SAAF,CAAaD,QAAb,CAAuBD,OAAvB,CAAlB,CADF,EAGD,CAED,GAAIT,MAAM,CAACwV,WAAX,CAAwB,CACtBvU,OAAO,CAACC,GAAR,CACEqI,eAAM2D,IAAN,CAAWuI,KAAX,CAAiB,mBAAjB,EACE,yCADF,CAEE,0EAHJ,EAKAxU,OAAO,CAACC,GAAR,CAAY,EAAZ,EACD,CAED,KAAM,yBAAatB,eAAOC,SAAP,CAAiB,iBAAjB,CAAb,CAAkD,IACtD2B,SAAS,CAACkU,KAAV,EADI,CAAN,CAGD,CA3xCM,CAAP,CA4xCD,CAID,QAAShB,CAAAA,yBAAT,CACEH,iBADF,CAEE,CACEpU,OADF,CAEEG,OAFF,CAGEsN,OAHF,CAFF,CAOE,CACA,KAAM1D,CAAAA,QAA2B,CAAG,GAAInH,CAAAA,GAAJ,CAAgB,CAClD,GAAGa,MAAM,CAAC+R,OAAP,CAAepB,iBAAiB,CAACzD,MAAjC,CACD;AADC,CAEApM,MAFA,CAEO,CAAC,EAAG,CAAE0O,QAAF,CAAH,CAAD,GAAsBA,QAAQ,EAAI,IAFzC,EAGArN,GAHA,CAGI,CAAC,CAACkL,KAAD,CAAD,GAAa,6CAAoBA,KAApB,CAA2BrD,OAA3B,EAAoCgI,QAHrD,CAD+C,CAKlD,GAAGhS,MAAM,CAACC,IAAP,CAAY0Q,iBAAiB,CAACvO,aAA9B,CAL+C,CAAhB,CAApC,CAQA,KAAM6P,CAAAA,wBAAwB,CAAI,uBAAsB,qBACtD3L,QADsD,CAEtD,mDAFF,CAIA,sBACE3J,cAAKC,IAAL,CAAUF,OAAV,CAAmBwV,oCAAnB,CAA6C3V,OAA7C,CAAsD,iBAAtD,CADF,CAEE0V,wBAFF,EAID","sourcesContent":["import { loadEnvConfig } from '@next/env'\nimport chalk from 'chalk'\nimport crypto from 'crypto'\nimport { promises, writeFileSync } from 'fs'\nimport Worker from 'jest-worker'\nimport devalue from 'next/dist/compiled/devalue'\nimport escapeStringRegexp from 'next/dist/compiled/escape-string-regexp'\nimport findUp from 'next/dist/compiled/find-up'\nimport { nanoid } from 'next/dist/compiled/nanoid/index.cjs'\nimport { pathToRegexp } from 'next/dist/compiled/path-to-regexp'\nimport path from 'path'\nimport formatWebpackMessages from '../client/dev/error-overlay/format-webpack-messages'\nimport {\n  PAGES_404_GET_INITIAL_PROPS_ERROR,\n  PUBLIC_DIR_MIDDLEWARE_CONFLICT,\n} from '../lib/constants'\nimport { fileExists } from '../lib/file-exists'\nimport { findPagesDir } from '../lib/find-pages-dir'\nimport loadCustomRoutes, {\n  getRedirectStatus,\n  normalizeRouteRegex,\n  Redirect,\n  RouteType,\n} from '../lib/load-custom-routes'\nimport { nonNullable } from '../lib/non-nullable'\nimport { recursiveDelete } from '../lib/recursive-delete'\nimport { verifyTypeScriptSetup } from '../lib/verifyTypeScriptSetup'\nimport {\n  BUILD_ID_FILE,\n  BUILD_MANIFEST,\n  CLIENT_STATIC_FILES_PATH,\n  EXPORT_DETAIL,\n  EXPORT_MARKER,\n  FONT_MANIFEST,\n  IMAGES_MANIFEST,\n  PAGES_MANIFEST,\n  PHASE_PRODUCTION_BUILD,\n  PRERENDER_MANIFEST,\n  REACT_LOADABLE_MANIFEST,\n  ROUTES_MANIFEST,\n  SERVERLESS_DIRECTORY,\n  SERVER_DIRECTORY,\n  SERVER_FILES_MANIFEST,\n} from '../next-server/lib/constants'\nimport {\n  getRouteRegex,\n  getSortedRoutes,\n  isDynamicRoute,\n} from '../next-server/lib/router/utils'\nimport { __ApiPreviewProps } from '../next-server/server/api-utils'\nimport loadConfig, {\n  isTargetLikeServerless,\n} from '../next-server/server/config'\nimport { BuildManifest } from '../next-server/server/get-page-files'\nimport '../next-server/server/node-polyfill-fetch'\nimport { normalizePagePath } from '../next-server/server/normalize-page-path'\nimport { getPagePath } from '../next-server/server/require'\nimport * as ciEnvironment from '../telemetry/ci-info'\nimport {\n  eventBuildCompleted,\n  eventBuildOptimize,\n  eventCliSession,\n  eventNextPlugins,\n} from '../telemetry/events'\nimport { Telemetry } from '../telemetry/storage'\nimport { CompilerResult, runCompiler } from './compiler'\nimport { createEntrypoints, createPagesMapping } from './entries'\nimport { generateBuildId } from './generate-build-id'\nimport { isWriteable } from './is-writeable'\nimport * as Log from './output/log'\nimport createSpinner from './spinner'\nimport { traceAsyncFn, traceFn, tracer } from './tracer'\nimport {\n  collectPages,\n  detectConflictingPaths,\n  getJsPageSizeInKb,\n  getNamedExports,\n  hasCustomGetInitialProps,\n  isPageStatic,\n  PageInfo,\n  printCustomRoutes,\n  printTreeView,\n} from './utils'\nimport getBaseWebpackConfig from './webpack-config'\nimport { PagesManifest } from './webpack/plugins/pages-manifest-plugin'\nimport { writeBuildId } from './write-build-id'\nimport opentelemetryApi from '@opentelemetry/api'\nimport { normalizeLocalePath } from '../next-server/lib/i18n/normalize-locale-path'\n\nconst staticCheckWorker = require.resolve('./utils')\n\nexport type SsgRoute = {\n  initialRevalidateSeconds: number | false\n  srcRoute: string | null\n  dataRoute: string\n}\n\nexport type DynamicSsgRoute = {\n  routeRegex: string\n  fallback: string | null | false\n  dataRoute: string\n  dataRouteRegex: string\n}\n\nexport type PrerenderManifest = {\n  version: 3\n  routes: { [route: string]: SsgRoute }\n  dynamicRoutes: { [route: string]: DynamicSsgRoute }\n  notFoundRoutes: string[]\n  preview: __ApiPreviewProps\n}\n\nexport default async function build(\n  dir: string,\n  conf = null,\n  reactProductionProfiling = false,\n  debugOutput = false\n): Promise<void> {\n  const span = tracer.startSpan('next-build')\n  return traceAsyncFn(span, async () => {\n    // attempt to load global env values so they are available in next.config.js\n    const { loadedEnvFiles } = traceFn(tracer.startSpan('load-dotenv'), () =>\n      loadEnvConfig(dir, false, Log)\n    )\n\n    const config = traceFn(tracer.startSpan('load-next-config'), () =>\n      loadConfig(PHASE_PRODUCTION_BUILD, dir, conf)\n    )\n    const { target } = config\n    const buildId = await traceAsyncFn(\n      tracer.startSpan('generate-buildid'),\n      () => generateBuildId(config.generateBuildId, nanoid)\n    )\n    const distDir = path.join(dir, config.distDir)\n\n    const {\n      headers,\n      rewrites,\n      redirects,\n    } = await traceAsyncFn(tracer.startSpan('load-custom-routes'), () =>\n      loadCustomRoutes(config)\n    )\n\n    if (ciEnvironment.isCI && !ciEnvironment.hasNextSupport) {\n      const cacheDir = path.join(distDir, 'cache')\n      const hasCache = await fileExists(cacheDir)\n\n      if (!hasCache) {\n        // Intentionally not piping to stderr in case people fail in CI when\n        // stderr is detected.\n        console.log(\n          `${Log.prefixes.warn} No build cache found. Please configure build caching for faster rebuilds. Read more: https://err.sh/next.js/no-cache`\n        )\n      }\n    }\n\n    const buildSpinner = createSpinner({\n      prefixText: `${Log.prefixes.info} Creating an optimized production build`,\n    })\n\n    const telemetry = new Telemetry({ distDir })\n\n    const publicDir = path.join(dir, 'public')\n    const pagesDir = findPagesDir(dir)\n    const hasPublicDir = await fileExists(publicDir)\n\n    telemetry.record(\n      eventCliSession(PHASE_PRODUCTION_BUILD, dir, {\n        cliCommand: 'build',\n        isSrcDir: path.relative(dir, pagesDir!).startsWith('src'),\n        hasNowJson: !!(await findUp('now.json', { cwd: dir })),\n        isCustomServer: null,\n      })\n    )\n\n    eventNextPlugins(path.resolve(dir)).then((events) =>\n      telemetry.record(events)\n    )\n\n    const ignoreTypeScriptErrors = Boolean(config.typescript?.ignoreBuildErrors)\n    await traceAsyncFn(tracer.startSpan('verify-typescript-setup'), () =>\n      verifyTypeScriptSetup(dir, pagesDir, !ignoreTypeScriptErrors)\n    )\n\n    const isLikeServerless = isTargetLikeServerless(target)\n\n    const pagePaths: string[] = await traceAsyncFn(\n      tracer.startSpan('collect-pages'),\n      () => collectPages(pagesDir, config.pageExtensions)\n    )\n\n    // needed for static exporting since we want to replace with HTML\n    // files\n    const allStaticPages = new Set<string>()\n    let allPageInfos = new Map<string, PageInfo>()\n\n    const previewProps: __ApiPreviewProps = {\n      previewModeId: crypto.randomBytes(16).toString('hex'),\n      previewModeSigningKey: crypto.randomBytes(32).toString('hex'),\n      previewModeEncryptionKey: crypto.randomBytes(32).toString('hex'),\n    }\n\n    const mappedPages = traceFn(tracer.startSpan('create-pages-mapping'), () =>\n      createPagesMapping(pagePaths, config.pageExtensions)\n    )\n    const entrypoints = traceFn(tracer.startSpan('create-entrypoints'), () =>\n      createEntrypoints(\n        mappedPages,\n        target,\n        buildId,\n        previewProps,\n        config,\n        loadedEnvFiles\n      )\n    )\n    const pageKeys = Object.keys(mappedPages)\n    const conflictingPublicFiles: string[] = []\n    const hasCustomErrorPage = mappedPages['/_error'].startsWith(\n      'private-next-pages'\n    )\n    const hasPages404 = Boolean(\n      mappedPages['/404'] &&\n        mappedPages['/404'].startsWith('private-next-pages')\n    )\n\n    if (hasPublicDir) {\n      const hasPublicUnderScoreNextDir = await fileExists(\n        path.join(publicDir, '_next')\n      )\n      if (hasPublicUnderScoreNextDir) {\n        throw new Error(PUBLIC_DIR_MIDDLEWARE_CONFLICT)\n      }\n    }\n\n    await traceAsyncFn(\n      tracer.startSpan('public-dir-conflict-check'),\n      async () => {\n        // Check if pages conflict with files in `public`\n        // Only a page of public file can be served, not both.\n        for (const page in mappedPages) {\n          const hasPublicPageFile = await fileExists(\n            path.join(publicDir, page === '/' ? '/index' : page),\n            'file'\n          )\n          if (hasPublicPageFile) {\n            conflictingPublicFiles.push(page)\n          }\n        }\n\n        const numConflicting = conflictingPublicFiles.length\n\n        if (numConflicting) {\n          throw new Error(\n            `Conflicting public and page file${\n              numConflicting === 1 ? ' was' : 's were'\n            } found. https://err.sh/vercel/next.js/conflicting-public-file-page\\n${conflictingPublicFiles.join(\n              '\\n'\n            )}`\n          )\n        }\n      }\n    )\n\n    const nestedReservedPages = pageKeys.filter((page) => {\n      return (\n        page.match(/\\/(_app|_document|_error)$/) && path.dirname(page) !== '/'\n      )\n    })\n\n    if (nestedReservedPages.length) {\n      Log.warn(\n        `The following reserved Next.js pages were detected not directly under the pages directory:\\n` +\n          nestedReservedPages.join('\\n') +\n          `\\nSee more info here: https://err.sh/next.js/nested-reserved-page\\n`\n      )\n    }\n\n    const buildCustomRoute = (\n      r: {\n        source: string\n        locale?: false\n        basePath?: false\n        statusCode?: number\n        destination?: string\n      },\n      type: RouteType\n    ) => {\n      const keys: any[] = []\n\n      const routeRegex = pathToRegexp(r.source, keys, {\n        strict: true,\n        sensitive: false,\n        delimiter: '/', // default is `/#?`, but Next does not pass query info\n      })\n\n      return {\n        ...r,\n        ...(type === 'redirect'\n          ? {\n              statusCode: getRedirectStatus(r as Redirect),\n              permanent: undefined,\n            }\n          : {}),\n        regex: normalizeRouteRegex(routeRegex.source),\n      }\n    }\n\n    const routesManifestPath = path.join(distDir, ROUTES_MANIFEST)\n    const routesManifest: {\n      version: number\n      pages404: boolean\n      basePath: string\n      redirects: Array<ReturnType<typeof buildCustomRoute>>\n      rewrites: Array<ReturnType<typeof buildCustomRoute>>\n      headers: Array<ReturnType<typeof buildCustomRoute>>\n      dynamicRoutes: Array<{\n        page: string\n        regex: string\n        namedRegex?: string\n        routeKeys?: { [key: string]: string }\n      }>\n      dataRoutes: Array<{\n        page: string\n        routeKeys?: { [key: string]: string }\n        dataRouteRegex: string\n        namedDataRouteRegex?: string\n      }>\n      i18n?: {\n        domains?: Array<{\n          http?: true\n          domain: string\n          locales?: string[]\n          defaultLocale: string\n        }>\n        locales: string[]\n        defaultLocale: string\n        localeDetection?: false\n      }\n    } = traceFn(tracer.startSpan('generate-routes-manifest'), () => ({\n      version: 3,\n      pages404: true,\n      basePath: config.basePath,\n      redirects: redirects.map((r) => buildCustomRoute(r, 'redirect')),\n      rewrites: rewrites.map((r) => buildCustomRoute(r, 'rewrite')),\n      headers: headers.map((r) => buildCustomRoute(r, 'header')),\n      dynamicRoutes: getSortedRoutes(pageKeys)\n        .filter(isDynamicRoute)\n        .map((page) => {\n          const routeRegex = getRouteRegex(page)\n          return {\n            page,\n            regex: normalizeRouteRegex(routeRegex.re.source),\n            routeKeys: routeRegex.routeKeys,\n            namedRegex: routeRegex.namedRegex,\n          }\n        }),\n      dataRoutes: [],\n      i18n: config.i18n || undefined,\n    }))\n\n    const distDirCreated = await traceAsyncFn(\n      tracer.startSpan('create-distdir'),\n      async () => {\n        try {\n          await promises.mkdir(distDir, { recursive: true })\n          return true\n        } catch (err) {\n          if (err.code === 'EPERM') {\n            return false\n          }\n          throw err\n        }\n      }\n    )\n\n    if (!distDirCreated || !(await isWriteable(distDir))) {\n      throw new Error(\n        '> Build directory is not writeable. https://err.sh/vercel/next.js/build-dir-not-writeable'\n      )\n    }\n\n    // We need to write the manifest with rewrites before build\n    // so serverless can import the manifest\n    await traceAsyncFn(tracer.startSpan('write-routes-manifest'), () =>\n      promises.writeFile(\n        routesManifestPath,\n        JSON.stringify(routesManifest),\n        'utf8'\n      )\n    )\n\n    const manifestPath = path.join(\n      distDir,\n      isLikeServerless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY,\n      PAGES_MANIFEST\n    )\n\n    const requiredServerFiles = traceFn(\n      tracer.startSpan('generate-required-server-files'),\n      () => ({\n        version: 1,\n        config: {\n          ...config,\n          compress: false,\n          configFile: undefined,\n        },\n        files: [\n          ROUTES_MANIFEST,\n          path.relative(distDir, manifestPath),\n          BUILD_MANIFEST,\n          PRERENDER_MANIFEST,\n          REACT_LOADABLE_MANIFEST,\n          config.experimental.optimizeFonts\n            ? path.join(\n                isLikeServerless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY,\n                FONT_MANIFEST\n              )\n            : null,\n          BUILD_ID_FILE,\n        ]\n          .filter(nonNullable)\n          .map((file) => path.join(config.distDir, file)),\n        ignore: [\n          path.relative(\n            dir,\n            path.join(path.dirname(require.resolve('sharp')), '**/*')\n          ),\n        ],\n      })\n    )\n\n    const configs = await traceAsyncFn(\n      tracer.startSpan('generate-webpack-config'),\n      () =>\n        Promise.all([\n          getBaseWebpackConfig(dir, {\n            buildId,\n            reactProductionProfiling,\n            isServer: false,\n            config,\n            target,\n            pagesDir,\n            entrypoints: entrypoints.client,\n            rewrites,\n          }),\n          getBaseWebpackConfig(dir, {\n            buildId,\n            reactProductionProfiling,\n            isServer: true,\n            config,\n            target,\n            pagesDir,\n            entrypoints: entrypoints.server,\n            rewrites,\n          }),\n        ])\n    )\n\n    const clientConfig = configs[0]\n\n    if (\n      clientConfig.optimization &&\n      (clientConfig.optimization.minimize !== true ||\n        (clientConfig.optimization.minimizer &&\n          clientConfig.optimization.minimizer.length === 0))\n    ) {\n      Log.warn(\n        `Production code optimization has been disabled in your project. Read more: https://err.sh/vercel/next.js/minification-disabled`\n      )\n    }\n\n    const webpackBuildStart = process.hrtime()\n\n    let result: CompilerResult = { warnings: [], errors: [] }\n    // TODO: why do we need this?? https://github.com/vercel/next.js/issues/8253\n    if (isLikeServerless) {\n      const clientResult = await runCompiler(clientConfig)\n      // Fail build if clientResult contains errors\n      if (clientResult.errors.length > 0) {\n        result = {\n          warnings: [...clientResult.warnings],\n          errors: [...clientResult.errors],\n        }\n      } else {\n        const serverResult = await runCompiler(configs[1])\n        result = {\n          warnings: [...clientResult.warnings, ...serverResult.warnings],\n          errors: [...clientResult.errors, ...serverResult.errors],\n        }\n      }\n    } else {\n      result = await traceAsyncFn(\n        tracer.startSpan('run-webpack-compiler'),\n        () => runCompiler(configs)\n      )\n    }\n\n    const webpackBuildEnd = process.hrtime(webpackBuildStart)\n    if (buildSpinner) {\n      buildSpinner.stopAndPersist()\n    }\n\n    result = traceFn(tracer.startSpan('format-webpack-messages'), () =>\n      formatWebpackMessages(result)\n    )\n\n    if (result.errors.length > 0) {\n      // Only keep the first error. Others are often indicative\n      // of the same problem, but confuse the reader with noise.\n      if (result.errors.length > 1) {\n        result.errors.length = 1\n      }\n      const error = result.errors.join('\\n\\n')\n\n      console.error(chalk.red('Failed to compile.\\n'))\n\n      if (\n        error.indexOf('private-next-pages') > -1 &&\n        error.indexOf('does not contain a default export') > -1\n      ) {\n        const page_name_regex = /'private-next-pages\\/(?<page_name>[^']*)'/\n        const parsed = page_name_regex.exec(error)\n        const page_name = parsed && parsed.groups && parsed.groups.page_name\n        throw new Error(\n          `webpack build failed: found page without a React Component as default export in pages/${page_name}\\n\\nSee https://err.sh/vercel/next.js/page-without-valid-component for more info.`\n        )\n      }\n\n      console.error(error)\n      console.error()\n\n      if (\n        error.indexOf('private-next-pages') > -1 ||\n        error.indexOf('__next_polyfill__') > -1\n      ) {\n        throw new Error(\n          '> webpack config.resolve.alias was incorrectly overridden. https://err.sh/vercel/next.js/invalid-resolve-alias'\n        )\n      }\n      throw new Error('> Build failed because of webpack errors')\n    } else {\n      telemetry.record(\n        eventBuildCompleted(pagePaths, {\n          durationInSeconds: webpackBuildEnd[0],\n        })\n      )\n\n      if (result.warnings.length > 0) {\n        Log.warn('Compiled with warnings\\n')\n        console.warn(result.warnings.join('\\n\\n'))\n        console.warn()\n      } else {\n        Log.info('Compiled successfully')\n      }\n    }\n\n    const postCompileSpinner = createSpinner({\n      prefixText: `${Log.prefixes.info} Collecting page data`,\n    })\n\n    const buildManifestPath = path.join(distDir, BUILD_MANIFEST)\n\n    const ssgPages = new Set<string>()\n    const ssgStaticFallbackPages = new Set<string>()\n    const ssgBlockingFallbackPages = new Set<string>()\n    const staticPages = new Set<string>()\n    const invalidPages = new Set<string>()\n    const hybridAmpPages = new Set<string>()\n    const serverPropsPages = new Set<string>()\n    const additionalSsgPaths = new Map<string, Array<string>>()\n    const additionalSsgPathsEncoded = new Map<string, Array<string>>()\n    const pageInfos = new Map<string, PageInfo>()\n    const pagesManifest = JSON.parse(\n      await promises.readFile(manifestPath, 'utf8')\n    ) as PagesManifest\n    const buildManifest = JSON.parse(\n      await promises.readFile(buildManifestPath, 'utf8')\n    ) as BuildManifest\n\n    let customAppGetInitialProps: boolean | undefined\n    let namedExports: Array<string> | undefined\n    let isNextImageImported: boolean | undefined\n    const analysisBegin = process.hrtime()\n    let hasSsrAmpPages = false\n\n    const staticCheckSpan = tracer.startSpan('static-check')\n    const { hasNonStaticErrorPage } = await traceAsyncFn(\n      staticCheckSpan,\n      async () => {\n        process.env.NEXT_PHASE = PHASE_PRODUCTION_BUILD\n\n        const staticCheckWorkers = new Worker(staticCheckWorker, {\n          numWorkers: config.experimental.cpus,\n          enableWorkerThreads: config.experimental.workerThreads,\n        }) as Worker & { isPageStatic: typeof isPageStatic }\n\n        staticCheckWorkers.getStdout().pipe(process.stdout)\n        staticCheckWorkers.getStderr().pipe(process.stderr)\n\n        const runtimeEnvConfig = {\n          publicRuntimeConfig: config.publicRuntimeConfig,\n          serverRuntimeConfig: config.serverRuntimeConfig,\n        }\n\n        const nonStaticErrorPage = await traceAsyncFn(\n          tracer.startSpan('check-static-error-page'),\n          async () =>\n            hasCustomErrorPage &&\n            (await hasCustomGetInitialProps(\n              getPagePath('/_error', distDir, isLikeServerless),\n              runtimeEnvConfig,\n              false\n            ))\n        )\n\n        await Promise.all(\n          pageKeys.map(async (page) => {\n            return traceAsyncFn(\n              tracer.startSpan('check-page', { attributes: { page } }),\n              async () => {\n                const actualPage = normalizePagePath(page)\n                const [selfSize, allSize] = await getJsPageSizeInKb(\n                  actualPage,\n                  distDir,\n                  buildManifest\n                )\n\n                let isSsg = false\n                let isStatic = false\n                let isHybridAmp = false\n                let ssgPageRoutes: string[] | null = null\n\n                const nonReservedPage = !page.match(\n                  /^\\/(_app|_error|_document|api(\\/|$))/\n                )\n\n                if (nonReservedPage) {\n                  const serverBundle = getPagePath(\n                    page,\n                    distDir,\n                    isLikeServerless\n                  )\n\n                  if (customAppGetInitialProps === undefined) {\n                    customAppGetInitialProps = await hasCustomGetInitialProps(\n                      isLikeServerless\n                        ? serverBundle\n                        : getPagePath('/_app', distDir, isLikeServerless),\n                      runtimeEnvConfig,\n                      true\n                    )\n\n                    namedExports = getNamedExports(\n                      isLikeServerless\n                        ? serverBundle\n                        : getPagePath('/_app', distDir, isLikeServerless),\n                      runtimeEnvConfig\n                    )\n\n                    if (customAppGetInitialProps) {\n                      console.warn(\n                        chalk.bold.yellow(`Warning: `) +\n                          chalk.yellow(\n                            `You have opted-out of Automatic Static Optimization due to \\`getInitialProps\\` in \\`pages/_app\\`. This does not opt-out pages with \\`getStaticProps\\``\n                          )\n                      )\n                      console.warn(\n                        'Read more: https://err.sh/next.js/opt-out-auto-static-optimization\\n'\n                      )\n                    }\n                  }\n\n                  try {\n                    let workerResult = await traceAsyncFn(\n                      tracer.startSpan('is-page-static'),\n                      () => {\n                        const spanContext = {}\n\n                        opentelemetryApi.propagation.inject(\n                          opentelemetryApi.context.active(),\n                          spanContext\n                        )\n                        return staticCheckWorkers.isPageStatic(\n                          page,\n                          serverBundle,\n                          runtimeEnvConfig,\n                          config.i18n?.locales,\n                          config.i18n?.defaultLocale,\n                          spanContext\n                        )\n                      }\n                    )\n\n                    if (\n                      workerResult.isStatic === false &&\n                      (workerResult.isHybridAmp || workerResult.isAmpOnly)\n                    ) {\n                      hasSsrAmpPages = true\n                    }\n\n                    if (workerResult.isHybridAmp) {\n                      isHybridAmp = true\n                      hybridAmpPages.add(page)\n                    }\n\n                    if (workerResult.isNextImageImported) {\n                      isNextImageImported = true\n                    }\n\n                    if (workerResult.hasStaticProps) {\n                      ssgPages.add(page)\n                      isSsg = true\n\n                      if (\n                        workerResult.prerenderRoutes &&\n                        workerResult.encodedPrerenderRoutes\n                      ) {\n                        additionalSsgPaths.set(\n                          page,\n                          workerResult.prerenderRoutes\n                        )\n                        additionalSsgPathsEncoded.set(\n                          page,\n                          workerResult.encodedPrerenderRoutes\n                        )\n                        ssgPageRoutes = workerResult.prerenderRoutes\n                      }\n\n                      if (workerResult.prerenderFallback === 'blocking') {\n                        ssgBlockingFallbackPages.add(page)\n                      } else if (workerResult.prerenderFallback === true) {\n                        ssgStaticFallbackPages.add(page)\n                      }\n                    } else if (workerResult.hasServerProps) {\n                      serverPropsPages.add(page)\n                    } else if (\n                      workerResult.isStatic &&\n                      customAppGetInitialProps === false\n                    ) {\n                      staticPages.add(page)\n                      isStatic = true\n                    }\n\n                    if (hasPages404 && page === '/404') {\n                      if (\n                        !workerResult.isStatic &&\n                        !workerResult.hasStaticProps\n                      ) {\n                        throw new Error(PAGES_404_GET_INITIAL_PROPS_ERROR)\n                      }\n                      // we need to ensure the 404 lambda is present since we use\n                      // it when _app has getInitialProps\n                      if (\n                        customAppGetInitialProps &&\n                        !workerResult.hasStaticProps\n                      ) {\n                        staticPages.delete(page)\n                      }\n                    }\n                  } catch (err) {\n                    if (err.message !== 'INVALID_DEFAULT_EXPORT') throw err\n                    invalidPages.add(page)\n                  }\n                }\n\n                pageInfos.set(page, {\n                  size: selfSize,\n                  totalSize: allSize,\n                  static: isStatic,\n                  isSsg,\n                  isHybridAmp,\n                  ssgPageRoutes,\n                  initialRevalidateSeconds: false,\n                })\n              }\n            )\n          })\n        )\n        staticCheckWorkers.end()\n\n        return { hasNonStaticErrorPage: nonStaticErrorPage }\n      }\n    )\n\n    if (!hasSsrAmpPages) {\n      requiredServerFiles.ignore.push(\n        path.relative(\n          dir,\n          path.join(\n            path.dirname(\n              require.resolve(\n                'next/dist/compiled/@ampproject/toolbox-optimizer'\n              )\n            ),\n            '**/*'\n          )\n        )\n      )\n    }\n\n    if (serverPropsPages.size > 0 || ssgPages.size > 0) {\n      // We update the routes manifest after the build with the\n      // data routes since we can't determine these until after build\n      routesManifest.dataRoutes = getSortedRoutes([\n        ...serverPropsPages,\n        ...ssgPages,\n      ]).map((page) => {\n        const pagePath = normalizePagePath(page)\n        const dataRoute = path.posix.join(\n          '/_next/data',\n          buildId,\n          `${pagePath}.json`\n        )\n\n        let dataRouteRegex: string\n        let namedDataRouteRegex: string | undefined\n        let routeKeys: { [named: string]: string } | undefined\n\n        if (isDynamicRoute(page)) {\n          const routeRegex = getRouteRegex(dataRoute.replace(/\\.json$/, ''))\n\n          dataRouteRegex = normalizeRouteRegex(\n            routeRegex.re.source.replace(/\\(\\?:\\\\\\/\\)\\?\\$$/, '\\\\.json$')\n          )\n          namedDataRouteRegex = routeRegex.namedRegex!.replace(\n            /\\(\\?:\\/\\)\\?\\$$/,\n            '\\\\.json$'\n          )\n          routeKeys = routeRegex.routeKeys\n        } else {\n          dataRouteRegex = normalizeRouteRegex(\n            new RegExp(\n              `^${path.posix.join(\n                '/_next/data',\n                escapeStringRegexp(buildId),\n                `${pagePath}.json`\n              )}$`\n            ).source\n          )\n        }\n\n        return {\n          page,\n          routeKeys,\n          dataRouteRegex,\n          namedDataRouteRegex,\n        }\n      })\n\n      await promises.writeFile(\n        routesManifestPath,\n        JSON.stringify(routesManifest),\n        'utf8'\n      )\n    }\n\n    // Since custom _app.js can wrap the 404 page we have to opt-out of static optimization if it has getInitialProps\n    // Only export the static 404 when there is no /_error present\n    const useStatic404 =\n      !customAppGetInitialProps && (!hasNonStaticErrorPage || hasPages404)\n\n    if (invalidPages.size > 0) {\n      throw new Error(\n        `Build optimization failed: found page${\n          invalidPages.size === 1 ? '' : 's'\n        } without a React Component as default export in \\n${[...invalidPages]\n          .map((pg) => `pages${pg}`)\n          .join(\n            '\\n'\n          )}\\n\\nSee https://err.sh/vercel/next.js/page-without-valid-component for more info.\\n`\n      )\n    }\n\n    await writeBuildId(distDir, buildId)\n\n    await promises.writeFile(\n      path.join(distDir, SERVER_FILES_MANIFEST),\n      JSON.stringify(requiredServerFiles),\n      'utf8'\n    )\n\n    const finalPrerenderRoutes: { [route: string]: SsgRoute } = {}\n    const tbdPrerenderRoutes: string[] = []\n    let ssgNotFoundPaths: string[] = []\n\n    if (postCompileSpinner) postCompileSpinner.stopAndPersist()\n\n    const { i18n } = config\n\n    await traceAsyncFn(tracer.startSpan('static-generation'), async () => {\n      if (staticPages.size > 0 || ssgPages.size > 0 || useStatic404) {\n        const combinedPages = [...staticPages, ...ssgPages]\n\n        detectConflictingPaths(\n          [\n            ...combinedPages,\n            ...pageKeys.filter((page) => !combinedPages.includes(page)),\n          ],\n          ssgPages,\n          additionalSsgPaths\n        )\n        const exportApp = require('../export').default\n        const exportOptions = {\n          silent: false,\n          buildExport: true,\n          threads: config.experimental.cpus,\n          pages: combinedPages,\n          outdir: path.join(distDir, 'export'),\n          statusMessage: 'Generating static pages',\n        }\n        const exportConfig: any = {\n          ...config,\n          initialPageRevalidationMap: {},\n          ssgNotFoundPaths: [] as string[],\n          // Default map will be the collection of automatic statically exported\n          // pages and incremental pages.\n          // n.b. we cannot handle this above in combinedPages because the dynamic\n          // page must be in the `pages` array, but not in the mapping.\n          exportPathMap: (defaultMap: any) => {\n            // Dynamically routed pages should be prerendered to be used as\n            // a client-side skeleton (fallback) while data is being fetched.\n            // This ensures the end-user never sees a 500 or slow response from the\n            // server.\n            //\n            // Note: prerendering disables automatic static optimization.\n            ssgPages.forEach((page) => {\n              if (isDynamicRoute(page)) {\n                tbdPrerenderRoutes.push(page)\n\n                if (ssgStaticFallbackPages.has(page)) {\n                  // Override the rendering for the dynamic page to be treated as a\n                  // fallback render.\n                  if (i18n) {\n                    defaultMap[`/${i18n.defaultLocale}${page}`] = {\n                      page,\n                      query: { __nextFallback: true },\n                    }\n                  } else {\n                    defaultMap[page] = { page, query: { __nextFallback: true } }\n                  }\n                } else {\n                  // Remove dynamically routed pages from the default path map when\n                  // fallback behavior is disabled.\n                  delete defaultMap[page]\n                }\n              }\n            })\n            // Append the \"well-known\" routes we should prerender for, e.g. blog\n            // post slugs.\n            additionalSsgPaths.forEach((routes, page) => {\n              const encodedRoutes = additionalSsgPathsEncoded.get(page)\n\n              routes.forEach((route, routeIdx) => {\n                defaultMap[route] = {\n                  page,\n                  query: { __nextSsgPath: encodedRoutes?.[routeIdx] },\n                }\n              })\n            })\n\n            if (useStatic404) {\n              defaultMap['/404'] = {\n                page: hasPages404 ? '/404' : '/_error',\n              }\n            }\n\n            if (i18n) {\n              for (const page of [\n                ...staticPages,\n                ...ssgPages,\n                ...(useStatic404 ? ['/404'] : []),\n              ]) {\n                const isSsg = ssgPages.has(page)\n                const isDynamic = isDynamicRoute(page)\n                const isFallback = isSsg && ssgStaticFallbackPages.has(page)\n\n                for (const locale of i18n.locales) {\n                  // skip fallback generation for SSG pages without fallback mode\n                  if (isSsg && isDynamic && !isFallback) continue\n                  const outputPath = `/${locale}${page === '/' ? '' : page}`\n\n                  defaultMap[outputPath] = {\n                    page: defaultMap[page]?.page || page,\n                    query: { __nextLocale: locale },\n                  }\n\n                  if (isFallback) {\n                    defaultMap[outputPath].query.__nextFallback = true\n                  }\n                }\n\n                if (isSsg) {\n                  // remove non-locale prefixed variant from defaultMap\n                  delete defaultMap[page]\n                }\n              }\n            }\n\n            return defaultMap\n          },\n          trailingSlash: false,\n        }\n\n        await exportApp(dir, exportOptions, exportConfig)\n\n        const postBuildSpinner = createSpinner({\n          prefixText: `${Log.prefixes.info} Finalizing page optimization`,\n        })\n        ssgNotFoundPaths = exportConfig.ssgNotFoundPaths\n\n        // remove server bundles that were exported\n        for (const page of staticPages) {\n          const serverBundle = getPagePath(page, distDir, isLikeServerless)\n          await promises.unlink(serverBundle)\n        }\n        const serverOutputDir = path.join(\n          distDir,\n          isLikeServerless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY\n        )\n\n        const moveExportedPage = async (\n          originPage: string,\n          page: string,\n          file: string,\n          isSsg: boolean,\n          ext: 'html' | 'json',\n          additionalSsgFile = false\n        ) => {\n          return traceAsyncFn(\n            tracer.startSpan('move-exported-page'),\n            async () => {\n              file = `${file}.${ext}`\n              const orig = path.join(exportOptions.outdir, file)\n              const pagePath = getPagePath(\n                originPage,\n                distDir,\n                isLikeServerless\n              )\n\n              const relativeDest = path\n                .relative(\n                  serverOutputDir,\n                  path.join(\n                    path.join(\n                      pagePath,\n                      // strip leading / and then recurse number of nested dirs\n                      // to place from base folder\n                      originPage\n                        .substr(1)\n                        .split('/')\n                        .map(() => '..')\n                        .join('/')\n                    ),\n                    file\n                  )\n                )\n                .replace(/\\\\/g, '/')\n\n              const dest = path.join(\n                distDir,\n                isLikeServerless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY,\n                relativeDest\n              )\n\n              if (!isSsg) {\n                pagesManifest[page] = relativeDest\n              }\n\n              const isNotFound = ssgNotFoundPaths.includes(page)\n\n              // for SSG files with i18n the non-prerendered variants are\n              // output with the locale prefixed so don't attempt moving\n              // without the prefix\n              if ((!i18n || additionalSsgFile) && !isNotFound) {\n                await promises.mkdir(path.dirname(dest), { recursive: true })\n                await promises.rename(orig, dest)\n              } else if (i18n && !isSsg) {\n                // this will be updated with the locale prefixed variant\n                // since all files are output with the locale prefix\n                delete pagesManifest[page]\n              }\n\n              if (i18n) {\n                if (additionalSsgFile) return\n\n                for (const locale of i18n.locales) {\n                  const curPath = `/${locale}${page === '/' ? '' : page}`\n                  const localeExt = page === '/' ? path.extname(file) : ''\n                  const relativeDestNoPages = relativeDest.substr(\n                    'pages/'.length\n                  )\n\n                  if (isSsg && ssgNotFoundPaths.includes(curPath)) {\n                    continue\n                  }\n\n                  const updatedRelativeDest = path\n                    .join(\n                      'pages',\n                      locale + localeExt,\n                      // if it's the top-most index page we want it to be locale.EXT\n                      // instead of locale/index.html\n                      page === '/' ? '' : relativeDestNoPages\n                    )\n                    .replace(/\\\\/g, '/')\n\n                  const updatedOrig = path.join(\n                    exportOptions.outdir,\n                    locale + localeExt,\n                    page === '/' ? '' : file\n                  )\n                  const updatedDest = path.join(\n                    distDir,\n                    isLikeServerless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY,\n                    updatedRelativeDest\n                  )\n\n                  if (!isSsg) {\n                    pagesManifest[curPath] = updatedRelativeDest\n                  }\n                  await promises.mkdir(path.dirname(updatedDest), {\n                    recursive: true,\n                  })\n                  await promises.rename(updatedOrig, updatedDest)\n                }\n              }\n            }\n          )\n        }\n\n        // Only move /404 to /404 when there is no custom 404 as in that case we don't know about the 404 page\n        if (!hasPages404 && useStatic404) {\n          await moveExportedPage('/_error', '/404', '/404', false, 'html')\n        }\n\n        for (const page of combinedPages) {\n          const isSsg = ssgPages.has(page)\n          const isStaticSsgFallback = ssgStaticFallbackPages.has(page)\n          const isDynamic = isDynamicRoute(page)\n          const hasAmp = hybridAmpPages.has(page)\n          const file = normalizePagePath(page)\n\n          // The dynamic version of SSG pages are only prerendered if the\n          // fallback is enabled. Below, we handle the specific prerenders\n          // of these.\n          const hasHtmlOutput = !(isSsg && isDynamic && !isStaticSsgFallback)\n\n          if (hasHtmlOutput) {\n            await moveExportedPage(page, page, file, isSsg, 'html')\n          }\n\n          if (hasAmp && (!isSsg || (isSsg && !isDynamic))) {\n            const ampPage = `${file}.amp`\n            await moveExportedPage(page, ampPage, ampPage, isSsg, 'html')\n\n            if (isSsg) {\n              await moveExportedPage(page, ampPage, ampPage, isSsg, 'json')\n            }\n          }\n\n          if (isSsg) {\n            // For a non-dynamic SSG page, we must copy its data file\n            // from export, we already moved the HTML file above\n            if (!isDynamic) {\n              await moveExportedPage(page, page, file, isSsg, 'json')\n\n              if (i18n) {\n                // TODO: do we want to show all locale variants in build output\n                for (const locale of i18n.locales) {\n                  const localePage = `/${locale}${page === '/' ? '' : page}`\n\n                  if (!ssgNotFoundPaths.includes(localePage)) {\n                    finalPrerenderRoutes[localePage] = {\n                      initialRevalidateSeconds:\n                        exportConfig.initialPageRevalidationMap[localePage],\n                      srcRoute: null,\n                      dataRoute: path.posix.join(\n                        '/_next/data',\n                        buildId,\n                        `${file}.json`\n                      ),\n                    }\n                  }\n                }\n              } else {\n                finalPrerenderRoutes[page] = {\n                  initialRevalidateSeconds:\n                    exportConfig.initialPageRevalidationMap[page],\n                  srcRoute: null,\n                  dataRoute: path.posix.join(\n                    '/_next/data',\n                    buildId,\n                    `${file}.json`\n                  ),\n                }\n              }\n              // Set Page Revalidation Interval\n              const pageInfo = pageInfos.get(page)\n              if (pageInfo) {\n                pageInfo.initialRevalidateSeconds =\n                  exportConfig.initialPageRevalidationMap[page]\n                pageInfos.set(page, pageInfo)\n              }\n            } else {\n              // For a dynamic SSG page, we did not copy its data exports and only\n              // copy the fallback HTML file (if present).\n              // We must also copy specific versions of this page as defined by\n              // `getStaticPaths` (additionalSsgPaths).\n              const extraRoutes = additionalSsgPaths.get(page) || []\n              for (const route of extraRoutes) {\n                const pageFile = normalizePagePath(route)\n                await moveExportedPage(\n                  page,\n                  route,\n                  pageFile,\n                  isSsg,\n                  'html',\n                  true\n                )\n                await moveExportedPage(\n                  page,\n                  route,\n                  pageFile,\n                  isSsg,\n                  'json',\n                  true\n                )\n\n                if (hasAmp) {\n                  const ampPage = `${pageFile}.amp`\n                  await moveExportedPage(\n                    page,\n                    ampPage,\n                    ampPage,\n                    isSsg,\n                    'html',\n                    true\n                  )\n                  await moveExportedPage(\n                    page,\n                    ampPage,\n                    ampPage,\n                    isSsg,\n                    'json',\n                    true\n                  )\n                }\n\n                finalPrerenderRoutes[route] = {\n                  initialRevalidateSeconds:\n                    exportConfig.initialPageRevalidationMap[route],\n                  srcRoute: page,\n                  dataRoute: path.posix.join(\n                    '/_next/data',\n                    buildId,\n                    `${normalizePagePath(route)}.json`\n                  ),\n                }\n\n                // Set route Revalidation Interval\n                const pageInfo = pageInfos.get(route)\n                if (pageInfo) {\n                  pageInfo.initialRevalidateSeconds =\n                    exportConfig.initialPageRevalidationMap[route]\n                  pageInfos.set(route, pageInfo)\n                }\n              }\n            }\n          }\n        }\n\n        // remove temporary export folder\n        await recursiveDelete(exportOptions.outdir)\n        await promises.rmdir(exportOptions.outdir)\n        await promises.writeFile(\n          manifestPath,\n          JSON.stringify(pagesManifest, null, 2),\n          'utf8'\n        )\n\n        if (postBuildSpinner) postBuildSpinner.stopAndPersist()\n        console.log()\n      }\n    })\n\n    const analysisEnd = process.hrtime(analysisBegin)\n    telemetry.record(\n      eventBuildOptimize(pagePaths, {\n        durationInSeconds: analysisEnd[0],\n        staticPageCount: staticPages.size,\n        staticPropsPageCount: ssgPages.size,\n        serverPropsPageCount: serverPropsPages.size,\n        ssrPageCount:\n          pagePaths.length -\n          (staticPages.size + ssgPages.size + serverPropsPages.size),\n        hasStatic404: useStatic404,\n        hasReportWebVitals: namedExports?.includes('reportWebVitals') ?? false,\n        rewritesCount: rewrites.length,\n        headersCount: headers.length,\n        redirectsCount: redirects.length - 1, // reduce one for trailing slash\n      })\n    )\n\n    if (ssgPages.size > 0) {\n      const finalDynamicRoutes: PrerenderManifest['dynamicRoutes'] = {}\n      tbdPrerenderRoutes.forEach((tbdRoute) => {\n        const normalizedRoute = normalizePagePath(tbdRoute)\n        const dataRoute = path.posix.join(\n          '/_next/data',\n          buildId,\n          `${normalizedRoute}.json`\n        )\n\n        finalDynamicRoutes[tbdRoute] = {\n          routeRegex: normalizeRouteRegex(getRouteRegex(tbdRoute).re.source),\n          dataRoute,\n          fallback: ssgBlockingFallbackPages.has(tbdRoute)\n            ? null\n            : ssgStaticFallbackPages.has(tbdRoute)\n            ? `${normalizedRoute}.html`\n            : false,\n          dataRouteRegex: normalizeRouteRegex(\n            getRouteRegex(dataRoute.replace(/\\.json$/, '')).re.source.replace(\n              /\\(\\?:\\\\\\/\\)\\?\\$$/,\n              '\\\\.json$'\n            )\n          ),\n        }\n      })\n      const prerenderManifest: PrerenderManifest = {\n        version: 3,\n        routes: finalPrerenderRoutes,\n        dynamicRoutes: finalDynamicRoutes,\n        notFoundRoutes: ssgNotFoundPaths,\n        preview: previewProps,\n      }\n\n      await promises.writeFile(\n        path.join(distDir, PRERENDER_MANIFEST),\n        JSON.stringify(prerenderManifest),\n        'utf8'\n      )\n      await generateClientSsgManifest(prerenderManifest, {\n        distDir,\n        buildId,\n        locales: config.i18n?.locales || [],\n      })\n    } else {\n      const prerenderManifest: PrerenderManifest = {\n        version: 3,\n        routes: {},\n        dynamicRoutes: {},\n        preview: previewProps,\n        notFoundRoutes: [],\n      }\n      await promises.writeFile(\n        path.join(distDir, PRERENDER_MANIFEST),\n        JSON.stringify(prerenderManifest),\n        'utf8'\n      )\n    }\n\n    const images = { ...config.images }\n    const { deviceSizes, imageSizes } = images\n    images.sizes = [...deviceSizes, ...imageSizes]\n\n    await promises.writeFile(\n      path.join(distDir, IMAGES_MANIFEST),\n      JSON.stringify({\n        version: 1,\n        images,\n      }),\n      'utf8'\n    )\n\n    await promises.writeFile(\n      path.join(distDir, EXPORT_MARKER),\n      JSON.stringify({\n        version: 1,\n        hasExportPathMap: typeof config.exportPathMap === 'function',\n        exportTrailingSlash: config.trailingSlash === true,\n        isNextImageImported: isNextImageImported === true,\n      }),\n      'utf8'\n    )\n    await promises.unlink(path.join(distDir, EXPORT_DETAIL)).catch((err) => {\n      if (err.code === 'ENOENT') {\n        return Promise.resolve()\n      }\n      return Promise.reject(err)\n    })\n\n    staticPages.forEach((pg) => allStaticPages.add(pg))\n    pageInfos.forEach((info: PageInfo, key: string) => {\n      allPageInfos.set(key, info)\n    })\n\n    await traceAsyncFn(tracer.startSpan('print-tree-view'), () =>\n      printTreeView(Object.keys(mappedPages), allPageInfos, isLikeServerless, {\n        distPath: distDir,\n        buildId: buildId,\n        pagesDir,\n        useStatic404,\n        pageExtensions: config.pageExtensions,\n        buildManifest,\n      })\n    )\n\n    if (debugOutput) {\n      traceFn(tracer.startSpan('print-custom-routes'), () =>\n        printCustomRoutes({ redirects, rewrites, headers })\n      )\n    }\n\n    if (config.analyticsId) {\n      console.log(\n        chalk.bold.green('Next.js Analytics') +\n          ' is enabled for this production build. ' +\n          \"You'll receive a Real Experience Score computed by all of your visitors.\"\n      )\n      console.log('')\n    }\n\n    await traceAsyncFn(tracer.startSpan('telemetry-flush'), () =>\n      telemetry.flush()\n    )\n  })\n}\n\nexport type ClientSsgManifest = Set<string>\n\nfunction generateClientSsgManifest(\n  prerenderManifest: PrerenderManifest,\n  {\n    buildId,\n    distDir,\n    locales,\n  }: { buildId: string; distDir: string; locales: string[] }\n) {\n  const ssgPages: ClientSsgManifest = new Set<string>([\n    ...Object.entries(prerenderManifest.routes)\n      // Filter out dynamic routes\n      .filter(([, { srcRoute }]) => srcRoute == null)\n      .map(([route]) => normalizeLocalePath(route, locales).pathname),\n    ...Object.keys(prerenderManifest.dynamicRoutes),\n  ])\n\n  const clientSsgManifestContent = `self.__SSG_MANIFEST=${devalue(\n    ssgPages\n  )};self.__SSG_MANIFEST_CB&&self.__SSG_MANIFEST_CB()`\n\n  writeFileSync(\n    path.join(distDir, CLIENT_STATIC_FILES_PATH, buildId, '_ssgManifest.js'),\n    clientSsgManifestContent\n  )\n}\n"]}