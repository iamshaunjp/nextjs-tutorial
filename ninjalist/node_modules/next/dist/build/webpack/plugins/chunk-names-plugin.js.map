{"version":3,"sources":["../../../../build/webpack/plugins/chunk-names-plugin.ts"],"names":["ChunkNamesPlugin","apply","compiler","hooks","compilation","tap","chunkTemplate","renderManifest","intercept","register","tapInfo","name","originalMethod","fn","result","options","filenameTemplate","chunk","outputOptions","hasEntryModule","filename","chunkFilename"],"mappings":"4DACA;AACA;AACA;AACe,KAAMA,CAAAA,gBAAiB,CACpCC,KAAK,CAACC,QAAD,CAA6B,CAChCA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CACE,wBADF,CAEGD,WAAD,EAAsB,CACpBA,WAAW,CAACE,aAAZ,CAA0BH,KAA1B,CAAgCI,cAAhC,CAA+CC,SAA/C,CAAyD,CACvDC,QAAQ,CAACC,OAAD,CAAe,CACrB,GAAIA,OAAO,CAACC,IAAR,GAAiB,yBAArB,CAAgD,CAC9C,KAAMC,CAAAA,cAAc,CAAGF,OAAO,CAACG,EAA/B,CACAH,OAAO,CAACG,EAAR,CAAa,CAACC,MAAD,CAAcC,OAAd,GAA+B,CAC1C,GAAIC,CAAAA,gBAAJ,CACA,KAAMC,CAAAA,KAAK,CAAGF,OAAO,CAACE,KAAtB,CACA,KAAMC,CAAAA,aAAa,CAAGH,OAAO,CAACG,aAA9B,CACA,GAAID,KAAK,CAACD,gBAAV,CAA4B,CAC1BA,gBAAgB,CAAGC,KAAK,CAACD,gBAAzB,CACD,CAFD,IAEO,IAAIC,KAAK,CAACE,cAAN,EAAJ,CAA4B,CACjCH,gBAAgB,CAAGE,aAAa,CAACE,QAAjC,CACD,CAFM,IAEA,CACLJ,gBAAgB,CAAGE,aAAa,CAACG,aAAjC,CACD,CAEDN,OAAO,CAACE,KAAR,CAAcD,gBAAd,CAAiCA,gBAAjC,CACA,MAAOJ,CAAAA,cAAc,CAACE,MAAD,CAASC,OAAT,CAArB,CACD,CAdD,CAeD,CACD,MAAOL,CAAAA,OAAP,CACD,CArBsD,CAAzD,EAuBD,CA1BH,EA4BD,CA9BmC,C","sourcesContent":["import { webpack } from 'next/dist/compiled/webpack/webpack'\n// This plugin mirrors webpack 3 `filename` and `chunkfilename` behavior\n// This fixes https://github.com/webpack/webpack/issues/6598\n// This plugin is based on https://github.com/researchgate/webpack/commit/2f28947fa0c63ccbb18f39c0098bd791a2c37090\nexport default class ChunkNamesPlugin {\n  apply(compiler: webpack.Compiler) {\n    compiler.hooks.compilation.tap(\n      'NextJsChunkNamesPlugin',\n      (compilation: any) => {\n        compilation.chunkTemplate.hooks.renderManifest.intercept({\n          register(tapInfo: any) {\n            if (tapInfo.name === 'JavascriptModulesPlugin') {\n              const originalMethod = tapInfo.fn\n              tapInfo.fn = (result: any, options: any) => {\n                let filenameTemplate\n                const chunk = options.chunk\n                const outputOptions = options.outputOptions\n                if (chunk.filenameTemplate) {\n                  filenameTemplate = chunk.filenameTemplate\n                } else if (chunk.hasEntryModule()) {\n                  filenameTemplate = outputOptions.filename\n                } else {\n                  filenameTemplate = outputOptions.chunkFilename\n                }\n\n                options.chunk.filenameTemplate = filenameTemplate\n                return originalMethod(result, options)\n              }\n            }\n            return tapInfo\n          },\n        })\n      }\n    )\n  }\n}\n"]}