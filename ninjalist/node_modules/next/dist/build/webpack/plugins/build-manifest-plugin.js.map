{"version":3,"sources":["../../../../build/webpack/plugins/build-manifest-plugin.ts"],"names":["generateClientManifest","compiler","assetMap","rewrites","tracer","withSpan","spans","get","span","startSpan","clientManifest","__rewrites","appDependencies","Set","pages","sortedPageKeys","Object","keys","forEach","page","dependencies","filteredDeps","filter","dep","has","length","sortedPages","isJsFile","file","endsWith","getFilesArray","files","isWebpack5","Array","from","BuildManifestPlugin","constructor","options","buildId","map","r","rewrite","destination","startsWith","createAssets","compilation","assets","namedChunks","polyfillFiles","devFiles","ampDevFiles","lowPriorityFiles","ampFirstPages","ampFirstEntryNames","ampFirstEntryNamesMap","entryName","pagePath","push","mainJsChunk","CLIENT_STATIC_FILES_RUNTIME_MAIN","mainJsFiles","polyfillChunk","CLIENT_STATIC_FILES_RUNTIME_POLYFILLS","reactRefreshChunk","CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH","entrypoint","entrypoints","values","isAmpRuntime","name","CLIENT_STATIC_FILES_RUNTIME_AMP","getFiles","replace","filesForEntry","CLIENT_STATIC_FILES_PATH","srcEmptySsgManifest","ssgManifestPath","sources","RawSource","sort","reduce","a","c","BUILD_MANIFEST","JSON","stringify","clientManifestPath","apply","hooks","make","tap","processAssets","stage","webpack","Compilation","PROCESS_ASSETS_STAGE_ADDITIONS","emit"],"mappings":"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","sourcesContent":["import devalue from 'next/dist/compiled/devalue'\nimport {\n  webpack,\n  isWebpack5,\n  sources,\n} from 'next/dist/compiled/webpack/webpack'\nimport {\n  BUILD_MANIFEST,\n  CLIENT_STATIC_FILES_PATH,\n  CLIENT_STATIC_FILES_RUNTIME_MAIN,\n  CLIENT_STATIC_FILES_RUNTIME_POLYFILLS,\n  CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH,\n  CLIENT_STATIC_FILES_RUNTIME_AMP,\n} from '../../../next-server/lib/constants'\nimport { BuildManifest } from '../../../next-server/server/get-page-files'\nimport getRouteFromEntrypoint from '../../../next-server/server/get-route-from-entrypoint'\nimport { ampFirstEntryNamesMap } from './next-drop-client-page-plugin'\nimport { Rewrite } from '../../../lib/load-custom-routes'\nimport { getSortedRoutes } from '../../../next-server/lib/router/utils'\nimport { tracer, traceFn } from '../../tracer'\nimport { spans } from './profiling-plugin'\n\ntype DeepMutable<T> = { -readonly [P in keyof T]: DeepMutable<T[P]> }\n\nexport type ClientBuildManifest = Record<string, string[]>\n\n// This function takes the asset map generated in BuildManifestPlugin and creates a\n// reduced version to send to the client.\nfunction generateClientManifest(\n  compiler: any,\n  assetMap: BuildManifest,\n  rewrites: Rewrite[]\n): string {\n  return tracer.withSpan(spans.get(compiler), () => {\n    const span = tracer.startSpan('NextJsBuildManifest-generateClientManifest')\n    return traceFn(span, () => {\n      const clientManifest: ClientBuildManifest = {\n        // TODO: update manifest type to include rewrites\n        __rewrites: rewrites as any,\n      }\n      const appDependencies = new Set(assetMap.pages['/_app'])\n      const sortedPageKeys = getSortedRoutes(Object.keys(assetMap.pages))\n\n      sortedPageKeys.forEach((page) => {\n        const dependencies = assetMap.pages[page]\n\n        if (page === '/_app') return\n        // Filter out dependencies in the _app entry, because those will have already\n        // been loaded by the client prior to a navigation event\n        const filteredDeps = dependencies.filter(\n          (dep) => !appDependencies.has(dep)\n        )\n\n        // The manifest can omit the page if it has no requirements\n        if (filteredDeps.length) {\n          clientManifest[page] = filteredDeps\n        }\n      })\n      // provide the sorted pages as an array so we don't rely on the object's keys\n      // being in order and we don't slow down look-up time for page assets\n      clientManifest.sortedPages = sortedPageKeys\n\n      return devalue(clientManifest)\n    })\n  })\n}\n\nfunction isJsFile(file: string): boolean {\n  // We don't want to include `.hot-update.js` files into the initial page\n  return !file.endsWith('.hot-update.js') && file.endsWith('.js')\n}\n\nfunction getFilesArray(files: any) {\n  if (!files) {\n    return []\n  }\n  if (isWebpack5) {\n    return Array.from(files)\n  }\n\n  return files\n}\n\n// This plugin creates a build-manifest.json for all assets that are being output\n// It has a mapping of \"entry\" filename to real filename. Because the real filename can be hashed in production\nexport default class BuildManifestPlugin {\n  private buildId: string\n  private rewrites: Rewrite[]\n\n  constructor(options: { buildId: string; rewrites: Rewrite[] }) {\n    this.buildId = options.buildId\n\n    this.rewrites = options.rewrites.map((r) => {\n      const rewrite = { ...r }\n\n      // omit external rewrite destinations since these aren't\n      // handled client-side\n      if (!rewrite.destination.startsWith('/')) {\n        delete (rewrite as any).destination\n      }\n      return rewrite\n    })\n  }\n\n  createAssets(compiler: any, compilation: any, assets: any) {\n    return tracer.withSpan(spans.get(compiler), () => {\n      const span = tracer.startSpan('NextJsBuildManifest-createassets')\n      return traceFn(span, () => {\n        const namedChunks: Map<string, webpack.compilation.Chunk> =\n          compilation.namedChunks\n        const assetMap: DeepMutable<BuildManifest> = {\n          polyfillFiles: [],\n          devFiles: [],\n          ampDevFiles: [],\n          lowPriorityFiles: [],\n          pages: { '/_app': [] },\n          ampFirstPages: [],\n        }\n\n        const ampFirstEntryNames = ampFirstEntryNamesMap.get(compilation)\n        if (ampFirstEntryNames) {\n          for (const entryName of ampFirstEntryNames) {\n            const pagePath = getRouteFromEntrypoint(entryName)\n            if (!pagePath) {\n              continue\n            }\n\n            assetMap.ampFirstPages.push(pagePath)\n          }\n        }\n\n        const mainJsChunk = namedChunks.get(CLIENT_STATIC_FILES_RUNTIME_MAIN)\n\n        const mainJsFiles: string[] = getFilesArray(mainJsChunk?.files).filter(\n          isJsFile\n        )\n\n        const polyfillChunk = namedChunks.get(\n          CLIENT_STATIC_FILES_RUNTIME_POLYFILLS\n        )\n\n        // Create a separate entry  for polyfills\n        assetMap.polyfillFiles = getFilesArray(polyfillChunk?.files).filter(\n          isJsFile\n        )\n\n        const reactRefreshChunk = namedChunks.get(\n          CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH\n        )\n        assetMap.devFiles = getFilesArray(reactRefreshChunk?.files).filter(\n          isJsFile\n        )\n\n        for (const entrypoint of compilation.entrypoints.values()) {\n          const isAmpRuntime =\n            entrypoint.name === CLIENT_STATIC_FILES_RUNTIME_AMP\n\n          if (isAmpRuntime) {\n            for (const file of entrypoint.getFiles()) {\n              if (!(isJsFile(file) || file.endsWith('.css'))) {\n                continue\n              }\n\n              assetMap.ampDevFiles.push(file.replace(/\\\\/g, '/'))\n            }\n            continue\n          }\n          const pagePath = getRouteFromEntrypoint(entrypoint.name)\n\n          if (!pagePath) {\n            continue\n          }\n\n          const filesForEntry: string[] = []\n\n          // getFiles() - helper function to read the files for an entrypoint from stats object\n          for (const file of entrypoint.getFiles()) {\n            if (!(isJsFile(file) || file.endsWith('.css'))) {\n              continue\n            }\n\n            filesForEntry.push(file.replace(/\\\\/g, '/'))\n          }\n\n          assetMap.pages[pagePath] = [...mainJsFiles, ...filesForEntry]\n        }\n\n        // Add the runtime build manifest file (generated later in this file)\n        // as a dependency for the app. If the flag is false, the file won't be\n        // downloaded by the client.\n        assetMap.lowPriorityFiles.push(\n          `${CLIENT_STATIC_FILES_PATH}/${this.buildId}/_buildManifest.js`\n        )\n\n        // Add the runtime ssg manifest file as a lazy-loaded file dependency.\n        // We also stub this file out for development mode (when it is not\n        // generated).\n        const srcEmptySsgManifest = `self.__SSG_MANIFEST=new Set;self.__SSG_MANIFEST_CB&&self.__SSG_MANIFEST_CB()`\n\n        const ssgManifestPath = `${CLIENT_STATIC_FILES_PATH}/${this.buildId}/_ssgManifest.js`\n        assetMap.lowPriorityFiles.push(ssgManifestPath)\n        assets[ssgManifestPath] = new sources.RawSource(srcEmptySsgManifest)\n\n        assetMap.pages = Object.keys(assetMap.pages)\n          .sort()\n          // eslint-disable-next-line\n          .reduce((a, c) => ((a[c] = assetMap.pages[c]), a), {} as any)\n\n        assets[BUILD_MANIFEST] = new sources.RawSource(\n          JSON.stringify(assetMap, null, 2)\n        )\n\n        const clientManifestPath = `${CLIENT_STATIC_FILES_PATH}/${this.buildId}/_buildManifest.js`\n\n        assets[clientManifestPath] = new sources.RawSource(\n          `self.__BUILD_MANIFEST = ${generateClientManifest(\n            compiler,\n            assetMap,\n            this.rewrites\n          )};self.__BUILD_MANIFEST_CB && self.__BUILD_MANIFEST_CB()`\n        )\n\n        return assets\n      })\n    })\n  }\n\n  apply(compiler: webpack.Compiler) {\n    if (isWebpack5) {\n      compiler.hooks.make.tap('NextJsBuildManifest', (compilation) => {\n        // @ts-ignore TODO: Remove ignore when webpack 5 is stable\n        compilation.hooks.processAssets.tap(\n          {\n            name: 'NextJsBuildManifest',\n            // @ts-ignore TODO: Remove ignore when webpack 5 is stable\n            stage: webpack.Compilation.PROCESS_ASSETS_STAGE_ADDITIONS,\n          },\n          (assets: any) => {\n            this.createAssets(compiler, compilation, assets)\n          }\n        )\n      })\n      return\n    }\n\n    compiler.hooks.emit.tap('NextJsBuildManifest', (compilation: any) => {\n      this.createAssets(compiler, compilation, compilation.assets)\n    })\n  }\n}\n"]}