{"version":3,"sources":["../../../../build/webpack/plugins/build-stats-plugin.ts"],"names":["STATS_VERSION","reduceSize","stats","chunks","map","chunk","reducedChunk","id","files","size","module","modules","push","reducedModule","type","moduleType","name","reasons","reason","moduleName","moduleId","entrypointName","entrypoints","assets","BuildStatsPlugin","constructor","options","distDir","apply","compiler","hooks","done","tapAsync","callback","tracer","withSpan","spans","get","writeStatsSpan","startSpan","Promise","resolve","reject","statsJson","toJson","all","cached","errors","warnings","maxModules","Infinity","chunkModules","ids","fileStream","fs","createWriteStream","path","join","jsonStream","bfj","streamify","version","pipe","on","err"],"mappings":"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","sourcesContent":["import fs from 'fs'\nimport path from 'path'\n// @ts-ignore no types package\nimport bfj from 'next/dist/compiled/bfj'\nimport { spans } from './profiling-plugin'\nimport { webpack } from 'next/dist/compiled/webpack/webpack'\nimport { tracer, traceAsyncFn } from '../../tracer'\n\nconst STATS_VERSION = 0\n\nfunction reduceSize(stats: any) {\n  stats.chunks = stats.chunks.map((chunk: any) => {\n    const reducedChunk: any = {\n      id: chunk.id,\n      files: chunk.files,\n      size: chunk.size,\n    }\n\n    for (const module of chunk.modules) {\n      if (!module.id) {\n        continue\n      }\n\n      if (!reducedChunk.modules) {\n        reducedChunk.modules = []\n      }\n\n      reducedChunk.modules.push(module.id)\n    }\n\n    return reducedChunk\n  })\n\n  stats.modules = stats.modules.map((module: any) => {\n    const reducedModule: any = {\n      type: module.type,\n      moduleType: module.moduleType,\n      size: module.size,\n      name: module.name,\n    }\n\n    if (module.reasons) {\n      for (const reason of module.reasons) {\n        if (!reason.moduleName || reason.moduleId === module.id) {\n          continue\n        }\n\n        if (!reducedModule.reasons) {\n          reducedModule.reasons = []\n        }\n\n        reducedModule.reasons.push(reason.moduleId)\n      }\n    }\n\n    return [module.id, reducedModule]\n  })\n\n  for (const entrypointName in stats.entrypoints) {\n    delete stats.entrypoints[entrypointName].assets\n  }\n\n  return stats\n}\n\n// This plugin creates a stats.json for a build when enabled\nexport default class BuildStatsPlugin {\n  private distDir: string\n\n  constructor(options: { distDir: string }) {\n    this.distDir = options.distDir\n  }\n\n  apply(compiler: webpack.Compiler) {\n    compiler.hooks.done.tapAsync(\n      'NextJsBuildStats',\n      async (stats, callback) => {\n        tracer.withSpan(spans.get(compiler), async () => {\n          try {\n            const writeStatsSpan = tracer.startSpan('NextJsBuildStats')\n            await traceAsyncFn(writeStatsSpan, () => {\n              return new Promise((resolve, reject) => {\n                const statsJson = reduceSize(\n                  stats.toJson({\n                    all: false,\n                    cached: true,\n                    reasons: true,\n                    entrypoints: true,\n                    chunks: true,\n                    errors: false,\n                    warnings: false,\n                    maxModules: Infinity,\n                    chunkModules: true,\n                    modules: true,\n                    // @ts-ignore this option exists\n                    ids: true,\n                  })\n                )\n                const fileStream = fs.createWriteStream(\n                  path.join(this.distDir, 'next-stats.json')\n                )\n                const jsonStream = bfj.streamify({\n                  version: STATS_VERSION,\n                  stats: statsJson,\n                })\n                jsonStream.pipe(fileStream)\n                jsonStream.on('error', reject)\n                fileStream.on('error', reject)\n                jsonStream.on('dataError', reject)\n                fileStream.on('close', resolve)\n              })\n            })\n            callback()\n          } catch (err) {\n            callback(err)\n          }\n        })\n      }\n    )\n  }\n}\n"]}