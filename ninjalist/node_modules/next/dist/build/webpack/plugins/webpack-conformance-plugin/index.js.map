{"version":3,"sources":["../../../../../build/webpack/plugins/webpack-conformance-plugin/index.ts"],"names":["WebpackConformancePlugin","constructor","options","tests","errors","warnings","compiler","buildStartedHandler","_compilation","callback","buildStartedResults","map","test","buildStared","result","IConformanceTestStatus","SUCCESS","gatherResults","buildCompletedHandler","compilation","cb","buildCompletedResults","buildCompleted","assets","push","parserHandler","factory","JS_TYPES","collectedVisitors","Map","forEach","getAstNode","getAstNodeCallbacks","has","visitor","set","get","inspectNode","type","hooks","parser","for","tap","name","program","ast","visitors","that","visitorKey","keys","path","callbacks","request","state","module","outcome","traverse","results","FAILED","apply","make","tapAsync","emit","normalModuleFactory"],"mappings":"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","sourcesContent":["// eslint-disable-next-line import/no-extraneous-dependencies\nimport { NodePath } from 'ast-types/lib/node-path'\nimport { visit } from 'next/dist/compiled/recast'\nimport { webpack } from 'next/dist/compiled/webpack/webpack'\nimport {\n  IConformanceAnomaly,\n  IConformanceTestResult,\n  IConformanceTestStatus,\n  IGetAstNodeResult,\n  IWebpackConformanceTest,\n  NodeInspector,\n} from './TestInterface'\n\nexport { DuplicatePolyfillsConformanceCheck } from './checks/duplicate-polyfills-conformance-check'\nexport { GranularChunksConformanceCheck } from './checks/granular-chunks-conformance'\nexport { MinificationConformanceCheck } from './checks/minification-conformance-check'\nexport { ReactSyncScriptsConformanceCheck } from './checks/react-sync-scripts-conformance-check'\n\nexport interface IWebpackConformancePluginOptions {\n  tests: IWebpackConformanceTest[]\n}\n\ninterface VisitorMap {\n  [key: string]: (path: NodePath) => void\n}\n\nexport default class WebpackConformancePlugin {\n  private tests: IWebpackConformanceTest[]\n  private errors: Array<IConformanceAnomaly>\n  private warnings: Array<IConformanceAnomaly>\n  private compiler?: webpack.Compiler\n\n  constructor(options: IWebpackConformancePluginOptions) {\n    this.tests = []\n    if (options.tests) {\n      this.tests.push(...options.tests)\n    }\n    this.errors = []\n    this.warnings = []\n  }\n\n  private gatherResults(results: Array<IConformanceTestResult>): void {\n    results.forEach((result) => {\n      if (result.result === IConformanceTestStatus.FAILED) {\n        result.errors && this.errors.push(...result.errors)\n        result.warnings && this.warnings.push(...result.warnings)\n      }\n    })\n  }\n\n  private buildStartedHandler = (\n    _compilation: webpack.compilation.Compilation,\n    callback: () => void\n  ) => {\n    const buildStartedResults: IConformanceTestResult[] = this.tests.map(\n      (test) => {\n        if (test.buildStared && this.compiler) {\n          return test.buildStared(this.compiler.options)\n        }\n        return {\n          result: IConformanceTestStatus.SUCCESS,\n        } as IConformanceTestResult\n      }\n    )\n\n    this.gatherResults(buildStartedResults)\n    callback()\n  }\n\n  private buildCompletedHandler = (\n    compilation: webpack.compilation.Compilation,\n    cb: () => void\n  ): void => {\n    const buildCompletedResults: IConformanceTestResult[] = this.tests.map(\n      (test) => {\n        if (test.buildCompleted) {\n          return test.buildCompleted(compilation.assets)\n        }\n        return {\n          result: IConformanceTestStatus.SUCCESS,\n        } as IConformanceTestResult\n      }\n    )\n\n    this.gatherResults(buildCompletedResults)\n    compilation.errors.push(...this.errors)\n    compilation.warnings.push(...this.warnings)\n    cb()\n  }\n\n  private parserHandler = (\n    factory: webpack.compilation.NormalModuleFactory\n  ): void => {\n    const JS_TYPES = ['auto', 'esm', 'dynamic']\n    const collectedVisitors: Map<string, [NodeInspector?]> = new Map()\n    // Collect all interested visitors from all tests.\n    this.tests.forEach((test) => {\n      if (test.getAstNode) {\n        const getAstNodeCallbacks: IGetAstNodeResult[] = test.getAstNode()\n        getAstNodeCallbacks.forEach((result) => {\n          if (!collectedVisitors.has(result.visitor)) {\n            collectedVisitors.set(result.visitor, [])\n          }\n          ;(collectedVisitors.get(result.visitor) as NodeInspector[]).push(\n            result.inspectNode\n          )\n        })\n      }\n    })\n\n    // Do an extra walk per module and add interested visitors to the walk.\n    for (const type of JS_TYPES) {\n      factory.hooks.parser\n        .for('javascript/' + type)\n        .tap(this.constructor.name, (parser: any) => {\n          parser.hooks.program.tap(this.constructor.name, (ast: any) => {\n            const visitors: VisitorMap = {}\n            const that = this\n            for (const visitorKey of collectedVisitors.keys()) {\n              visitors[visitorKey] = function (path: NodePath) {\n                const callbacks = collectedVisitors.get(visitorKey) || []\n                callbacks.forEach((cb) => {\n                  if (!cb) {\n                    return\n                  }\n                  const { request } = parser.state.module\n                  const outcome = cb(path, { request })\n                  that.gatherResults([outcome])\n                })\n                this.traverse(path)\n                return false\n              }\n            }\n            visit(ast, visitors)\n          })\n        })\n    }\n  }\n\n  public apply(compiler: webpack.Compiler) {\n    this.compiler = compiler\n    compiler.hooks.make.tapAsync(\n      this.constructor.name,\n      this.buildStartedHandler\n    )\n    compiler.hooks.emit.tapAsync(\n      this.constructor.name,\n      this.buildCompletedHandler\n    )\n    compiler.hooks.normalModuleFactory.tap(\n      this.constructor.name,\n      this.parserHandler\n    )\n  }\n}\n"]}