{"version":3,"sources":["../../../../build/webpack/plugins/font-stylesheet-gathering-plugin.ts"],"names":["minifyCss","css","Promise","resolve","excludeAll","discardComments","normalizeWhitespace","exclude","process","from","undefined","then","res","FontStylesheetGatheringPlugin","compiler","gatheredStylesheets","manifestContent","parserHandler","factory","JS_TYPES","type","hooks","parser","for","tap","constructor","name","evaluate","node","state","module","resource","includes","result","BasicEvaluatedExpression","setRange","range","setExpression","setIdentifier","isWebpack5","getMembers","jsxNodeHandler","arguments","length","isNodeCreatingLinkElement","propsNode","props","properties","forEach","prop","key","value","rel","href","OPTIMIZED_FONT_PROVIDERS","some","url","startsWith","push","call","apply","normalModuleFactory","make","tapAsync","compilation","cb","options","output","path","endsWith","mainTemplate","requireExtensions","source","requireFn","JSON","stringify","finishModules","_","modulesFinished","fontDefinitionPromises","map","promiseIndex","content","assets","FONT_MANIFEST","sources","RawSource","processAssets","stage","webpack","Compilation","PROCESS_ASSETS_STAGE_ADDITIONS","callee","componentNode"],"mappings":"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","sourcesContent":["import {\n  webpack,\n  BasicEvaluatedExpression,\n  isWebpack5,\n  sources,\n} from 'next/dist/compiled/webpack/webpack'\nimport { namedTypes } from 'ast-types'\nimport {\n  getFontDefinitionFromNetwork,\n  FontManifest,\n} from '../../../next-server/server/font-utils'\nimport postcss from 'postcss'\nimport minifier from 'cssnano-simple'\nimport {\n  FONT_MANIFEST,\n  OPTIMIZED_FONT_PROVIDERS,\n} from '../../../next-server/lib/constants'\n\nasync function minifyCss(css: string): Promise<string> {\n  return new Promise((resolve) =>\n    postcss([\n      minifier({\n        excludeAll: true,\n        discardComments: true,\n        normalizeWhitespace: { exclude: false },\n      }),\n    ])\n      .process(css, { from: undefined })\n      .then((res) => {\n        resolve(res.css)\n      })\n  )\n}\n\nexport class FontStylesheetGatheringPlugin {\n  compiler?: webpack.Compiler\n  gatheredStylesheets: Array<string> = []\n  manifestContent: FontManifest = []\n\n  private parserHandler = (\n    factory: webpack.compilation.NormalModuleFactory\n  ): void => {\n    const JS_TYPES = ['auto', 'esm', 'dynamic']\n    // Do an extra walk per module and add interested visitors to the walk.\n    for (const type of JS_TYPES) {\n      factory.hooks.parser\n        .for('javascript/' + type)\n        .tap(this.constructor.name, (parser: any) => {\n          /**\n           * Webpack fun facts:\n           * `parser.hooks.call.for` cannot catch calls for user defined identifiers like `__jsx`\n           * it can only detect calls for native objects like `window`, `this`, `eval` etc.\n           * In order to be able to catch calls of variables like `__jsx`, first we need to catch them as\n           * Identifier and then return `BasicEvaluatedExpression` whose `id` and `type` webpack matches to\n           * invoke hook for call.\n           * See: https://github.com/webpack/webpack/blob/webpack-4/lib/Parser.js#L1931-L1932.\n           */\n          parser.hooks.evaluate\n            .for('Identifier')\n            .tap(this.constructor.name, (node: namedTypes.Identifier) => {\n              // We will only optimize fonts from first party code.\n              if (parser?.state?.module?.resource.includes('node_modules')) {\n                return\n              }\n              let result\n              if (node.name === '_jsx' || node.name === '__jsx') {\n                result = new BasicEvaluatedExpression()\n                // @ts-ignore\n                result.setRange(node.range)\n                result.setExpression(node)\n                result.setIdentifier(node.name)\n\n                // This was added webpack 5.\n                if (isWebpack5) {\n                  result.getMembers = () => []\n                }\n              }\n              return result\n            })\n\n          const jsxNodeHandler = (node: namedTypes.CallExpression) => {\n            if (node.arguments.length !== 2) {\n              // A font link tag has only two arguments rel=stylesheet and href='...'\n              return\n            }\n            if (!isNodeCreatingLinkElement(node)) {\n              return\n            }\n\n            // node.arguments[0] is the name of the tag and [1] are the props.\n            const propsNode = node.arguments[1] as namedTypes.ObjectExpression\n            const props: { [key: string]: string } = {}\n            propsNode.properties.forEach((prop) => {\n              if (prop.type !== 'Property') {\n                return\n              }\n              if (\n                prop.key.type === 'Identifier' &&\n                prop.value.type === 'Literal'\n              ) {\n                props[prop.key.name] = prop.value.value as string\n              }\n            })\n            if (\n              !props.rel ||\n              props.rel !== 'stylesheet' ||\n              !props.href ||\n              !OPTIMIZED_FONT_PROVIDERS.some((url) =>\n                props.href.startsWith(url)\n              )\n            ) {\n              return false\n            }\n\n            this.gatheredStylesheets.push(props.href)\n          }\n          // React JSX transform:\n          parser.hooks.call\n            .for('_jsx')\n            .tap(this.constructor.name, jsxNodeHandler)\n          // Next.js JSX transform:\n          parser.hooks.call\n            .for('__jsx')\n            .tap(this.constructor.name, jsxNodeHandler)\n          // New React JSX transform:\n          parser.hooks.call\n            .for('imported var')\n            .tap(this.constructor.name, jsxNodeHandler)\n        })\n    }\n  }\n\n  public apply(compiler: webpack.Compiler) {\n    this.compiler = compiler\n    compiler.hooks.normalModuleFactory.tap(\n      this.constructor.name,\n      this.parserHandler\n    )\n    compiler.hooks.make.tapAsync(this.constructor.name, (compilation, cb) => {\n      // @ts-ignore\n      if (compilation.options.output.path.endsWith('serverless')) {\n        /**\n         * Inline font manifest for serverless case only.\n         * For target: server drive the manifest through physical file and less of webpack magic.\n         */\n        const mainTemplate = compilation.mainTemplate\n        mainTemplate.hooks.requireExtensions.tap(\n          this.constructor.name,\n          (source: string) => {\n            return `${source}\n                // Font manifest declaration\n                ${\n                  isWebpack5 ? '__webpack_require__' : mainTemplate.requireFn\n                }.__NEXT_FONT_MANIFEST__ = ${JSON.stringify(\n              this.manifestContent\n            )};\n            // Enable feature:\n            process.env.__NEXT_OPTIMIZE_FONTS = JSON.stringify(true);`\n          }\n        )\n      }\n      compilation.hooks.finishModules.tapAsync(\n        this.constructor.name,\n        async (_: any, modulesFinished: Function) => {\n          const fontDefinitionPromises = this.gatheredStylesheets.map((url) =>\n            getFontDefinitionFromNetwork(url)\n          )\n\n          this.manifestContent = []\n          for (let promiseIndex in fontDefinitionPromises) {\n            const css = await fontDefinitionPromises[promiseIndex]\n            const content = await minifyCss(css)\n            this.manifestContent.push({\n              url: this.gatheredStylesheets[promiseIndex],\n              content,\n            })\n          }\n          if (!isWebpack5) {\n            compilation.assets[FONT_MANIFEST] = new sources.RawSource(\n              JSON.stringify(this.manifestContent, null, '  ')\n            )\n          }\n          modulesFinished()\n        }\n      )\n      cb()\n    })\n\n    if (isWebpack5) {\n      compiler.hooks.make.tap(this.constructor.name, (compilation) => {\n        // @ts-ignore TODO: Remove ignore when webpack 5 is stable\n        compilation.hooks.processAssets.tap(\n          {\n            name: this.constructor.name,\n            // @ts-ignore TODO: Remove ignore when webpack 5 is stable\n            stage: webpack.Compilation.PROCESS_ASSETS_STAGE_ADDITIONS,\n          },\n          (assets: any) => {\n            assets[FONT_MANIFEST] = new sources.RawSource(\n              JSON.stringify(this.manifestContent, null, '  ')\n            )\n          }\n        )\n      })\n    }\n  }\n}\n\nfunction isNodeCreatingLinkElement(node: namedTypes.CallExpression) {\n  const callee = node.callee as namedTypes.Identifier\n  if (callee.type !== 'Identifier') {\n    return false\n  }\n  const componentNode = node.arguments[0] as namedTypes.Literal\n  if (componentNode.type !== 'Literal') {\n    return false\n  }\n  // React has pragma: _jsx.\n  // Next has pragma: __jsx.\n  return (\n    (callee.name === '_jsx' || callee.name === '__jsx') &&\n    componentNode.value === 'link'\n  )\n}\n"]}