{"version":3,"sources":["../../../../build/webpack/plugins/pages-manifest-plugin.ts"],"names":["PagesManifestPlugin","constructor","serverless","createAssets","compilation","assets","entrypoints","pages","entrypoint","values","pagePath","name","files","getFiles","filter","file","includes","endsWith","length","console","log","replace","PAGES_MANIFEST","sources","RawSource","JSON","stringify","apply","compiler","isWebpack5","hooks","make","tap","processAssets","stage","webpack","Compilation","PROCESS_ASSETS_STAGE_ADDITIONS","emit"],"mappings":"4DAAA,2DAKA,6DACA,qH,mFAIA;AACA;AACA;AACe,KAAMA,CAAAA,mBAA8C,CAGjEC,WAAW,CAACC,UAAD,CAAsB,MAFjCA,UAEiC,QAC/B,KAAKA,UAAL,CAAkBA,UAAlB,CACD,CAEDC,YAAY,CAACC,WAAD,CAAmBC,MAAnB,CAAgC,CAC1C,KAAMC,CAAAA,WAAW,CAAGF,WAAW,CAACE,WAAhC,CACA,KAAMC,CAAAA,KAAoB,CAAG,EAA7B,CAEA,IAAK,KAAMC,CAAAA,UAAX,GAAyBF,CAAAA,WAAW,CAACG,MAAZ,EAAzB,CAA+C,CAC7C,KAAMC,CAAAA,QAAQ,CAAG,oCAAuBF,UAAU,CAACG,IAAlC,CAAwC,KAAKT,UAA7C,CAAjB,CAEA,GAAI,CAACQ,QAAL,CAAe,CACb,SACD,CAED,KAAME,CAAAA,KAAK,CAAGJ,UAAU,CACrBK,QADW,GAEXC,MAFW,CAGTC,IAAD,EACE,CAACA,IAAI,CAACC,QAAL,CAAc,iBAAd,CAAD,EAAqCD,IAAI,CAACE,QAAL,CAAc,KAAd,CAJ7B,CAAd,CAOA,GAAIL,KAAK,CAACM,MAAN,CAAe,CAAnB,CAAsB,CACpBC,OAAO,CAACC,GAAR,CACG,iDAAgDZ,UAAU,CAACG,IAAK,EADnE,CAEEC,KAFF,EAIA,SACD,CAED;AACAL,KAAK,CAACG,QAAD,CAAL,CAAkBE,KAAK,CAAC,CAAD,CAAL,CAASS,OAAT,CAAiB,KAAjB,CAAwB,GAAxB,CAAlB,CACD,CAEDhB,MAAM,CAACiB,yBAAD,CAAN,CAAyB,GAAIC,kBAAQC,SAAZ,CACvBC,IAAI,CAACC,SAAL,CAAenB,KAAf,CAAsB,IAAtB,CAA4B,CAA5B,CADuB,CAAzB,CAGD,CAEDoB,KAAK,CAACC,QAAD,CAAmC,CACtC,GAAIC,mBAAJ,CAAgB,CACdD,QAAQ,CAACE,KAAT,CAAeC,IAAf,CAAoBC,GAApB,CAAwB,qBAAxB,CAAgD5B,WAAD,EAAiB,CAC9D;AACAA,WAAW,CAAC0B,KAAZ,CAAkBG,aAAlB,CAAgCD,GAAhC,CACE,CACErB,IAAI,CAAE,qBADR,CAEE;AACAuB,KAAK,CAAEC,iBAAQC,WAAR,CAAoBC,8BAH7B,CADF,CAMGhC,MAAD,EAAiB,CACf,KAAKF,YAAL,CAAkBC,WAAlB,CAA+BC,MAA/B,EACD,CARH,EAUD,CAZD,EAaA,OACD,CAEDuB,QAAQ,CAACE,KAAT,CAAeQ,IAAf,CAAoBN,GAApB,CAAwB,qBAAxB,CAAgD5B,WAAD,EAAsB,CACnE,KAAKD,YAAL,CAAkBC,WAAlB,CAA+BA,WAAW,CAACC,MAA3C,EACD,CAFD,EAGD,CA/DgE,C","sourcesContent":["import {\n  webpack,\n  isWebpack5,\n  sources,\n} from 'next/dist/compiled/webpack/webpack'\nimport { PAGES_MANIFEST } from '../../../next-server/lib/constants'\nimport getRouteFromEntrypoint from '../../../next-server/server/get-route-from-entrypoint'\n\nexport type PagesManifest = { [page: string]: string }\n\n// This plugin creates a pages-manifest.json from page entrypoints.\n// This is used for mapping paths like `/` to `.next/server/static/<buildid>/pages/index.js` when doing SSR\n// It's also used by next export to provide defaultPathMap\nexport default class PagesManifestPlugin implements webpack.Plugin {\n  serverless: boolean\n\n  constructor(serverless: boolean) {\n    this.serverless = serverless\n  }\n\n  createAssets(compilation: any, assets: any) {\n    const entrypoints = compilation.entrypoints\n    const pages: PagesManifest = {}\n\n    for (const entrypoint of entrypoints.values()) {\n      const pagePath = getRouteFromEntrypoint(entrypoint.name, this.serverless)\n\n      if (!pagePath) {\n        continue\n      }\n\n      const files = entrypoint\n        .getFiles()\n        .filter(\n          (file: string) =>\n            !file.includes('webpack-runtime') && file.endsWith('.js')\n        )\n\n      if (files.length > 1) {\n        console.log(\n          `Found more than one file in server entrypoint ${entrypoint.name}`,\n          files\n        )\n        continue\n      }\n\n      // Write filename, replace any backslashes in path (on windows) with forwardslashes for cross-platform consistency.\n      pages[pagePath] = files[0].replace(/\\\\/g, '/')\n    }\n\n    assets[PAGES_MANIFEST] = new sources.RawSource(\n      JSON.stringify(pages, null, 2)\n    )\n  }\n\n  apply(compiler: webpack.Compiler): void {\n    if (isWebpack5) {\n      compiler.hooks.make.tap('NextJsPagesManifest', (compilation) => {\n        // @ts-ignore TODO: Remove ignore when webpack 5 is stable\n        compilation.hooks.processAssets.tap(\n          {\n            name: 'NextJsPagesManifest',\n            // @ts-ignore TODO: Remove ignore when webpack 5 is stable\n            stage: webpack.Compilation.PROCESS_ASSETS_STAGE_ADDITIONS,\n          },\n          (assets: any) => {\n            this.createAssets(compilation, assets)\n          }\n        )\n      })\n      return\n    }\n\n    compiler.hooks.emit.tap('NextJsPagesManifest', (compilation: any) => {\n      this.createAssets(compilation, compilation.assets)\n    })\n  }\n}\n"]}