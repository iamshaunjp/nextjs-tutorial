{"version":3,"sources":["../../../../build/webpack/plugins/next-drop-client-page-plugin.ts"],"names":["ampFirstEntryNamesMap","WeakMap","PLUGIN_NAME","DropClientPage","ampPages","Set","apply","compiler","hooks","compilation","tap","normalModuleFactory","findEntryModule","mod","queue","module","isWebpack5","incomingConnections","moduleGraph","getIncomingConnections","incomingConnection","originModule","add","reason","reasons","handler","parser","markAsAmpFirst","entryModule","state","buildInfo","NEXT_ampFirst","preDeclarator","declarator","id","name","STRING_LITERAL_DROP_BUNDLE","varDeclaration","for","has","set","ampFirstEntryNamesItem","get","seal","entryData","entries","dependency","dependencies","getModule","push","delete","i","_preparedEntrypoints","length","entrypoint","splice"],"mappings":"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","sourcesContent":["import { webpack } from 'next/dist/compiled/webpack/webpack'\nimport { isWebpack5 } from 'next/dist/compiled/webpack/webpack'\nimport { STRING_LITERAL_DROP_BUNDLE } from '../../../next-server/lib/constants'\n\nexport const ampFirstEntryNamesMap: WeakMap<\n  webpack.compilation.Compilation,\n  string[]\n> = new WeakMap()\n\nconst PLUGIN_NAME = 'DropAmpFirstPagesPlugin'\n\n// Prevents outputting client pages when they are not needed\nexport class DropClientPage implements webpack.Plugin {\n  ampPages = new Set()\n\n  apply(compiler: webpack.Compiler) {\n    compiler.hooks.compilation.tap(\n      PLUGIN_NAME,\n      (compilation: any, { normalModuleFactory }: any) => {\n        // Recursively look up the issuer till it ends up at the root\n        function findEntryModule(mod: any): webpack.compilation.Module | null {\n          const queue = new Set([mod])\n          for (const module of queue) {\n            if (isWebpack5) {\n              // @ts-ignore TODO: webpack 5 types\n              const incomingConnections = compilation.moduleGraph.getIncomingConnections(\n                module\n              )\n\n              for (const incomingConnection of incomingConnections) {\n                if (!incomingConnection.originModule) return module\n                queue.add(incomingConnection.originModule)\n              }\n              continue\n            }\n\n            for (const reason of module.reasons) {\n              if (!reason.module) return module\n              queue.add(reason.module)\n            }\n          }\n\n          return null\n        }\n\n        function handler(parser: any) {\n          function markAsAmpFirst() {\n            const entryModule = findEntryModule(parser.state.module)\n\n            if (!entryModule) {\n              return\n            }\n\n            // @ts-ignore buildInfo exists on Module\n            entryModule.buildInfo.NEXT_ampFirst = true\n          }\n\n          if (isWebpack5) {\n            parser.hooks.preDeclarator.tap(PLUGIN_NAME, (declarator: any) => {\n              if (declarator?.id?.name === STRING_LITERAL_DROP_BUNDLE) {\n                markAsAmpFirst()\n              }\n            })\n            return\n          }\n\n          parser.hooks.varDeclaration\n            .for(STRING_LITERAL_DROP_BUNDLE)\n            .tap(PLUGIN_NAME, markAsAmpFirst)\n        }\n\n        normalModuleFactory.hooks.parser\n          .for('javascript/auto')\n          .tap(PLUGIN_NAME, handler)\n\n        normalModuleFactory.hooks.parser\n          .for('javascript/esm')\n          .tap(PLUGIN_NAME, handler)\n\n        normalModuleFactory.hooks.parser\n          .for('javascript/dynamic')\n          .tap(PLUGIN_NAME, handler)\n\n        if (!ampFirstEntryNamesMap.has(compilation)) {\n          ampFirstEntryNamesMap.set(compilation, [])\n        }\n\n        const ampFirstEntryNamesItem = ampFirstEntryNamesMap.get(\n          compilation\n        ) as string[]\n\n        compilation.hooks.seal.tap(PLUGIN_NAME, () => {\n          if (isWebpack5) {\n            for (const [name, entryData] of compilation.entries) {\n              for (const dependency of entryData.dependencies) {\n                // @ts-ignore TODO: webpack 5 types\n                const module = compilation.moduleGraph.getModule(dependency)\n                if (module?.buildInfo?.NEXT_ampFirst) {\n                  ampFirstEntryNamesItem.push(name)\n                  // @ts-ignore @types/webpack has outdated types for webpack 5\n                  compilation.entries.delete(name)\n                }\n              }\n            }\n            return\n          }\n          // Remove preparedEntrypoint that has bundle drop marker\n          // This will ensure webpack does not create chunks/bundles for this particular entrypoint\n          for (\n            let i = compilation._preparedEntrypoints.length - 1;\n            i >= 0;\n            i--\n          ) {\n            const entrypoint = compilation._preparedEntrypoints[i]\n            if (entrypoint?.module?.buildInfo?.NEXT_ampFirst) {\n              ampFirstEntryNamesItem.push(entrypoint.name)\n              compilation._preparedEntrypoints.splice(i, 1)\n            }\n          }\n\n          for (let i = compilation.entries.length - 1; i >= 0; i--) {\n            const entryModule = compilation.entries[i]\n            if (entryModule?.buildInfo?.NEXT_ampFirst) {\n              compilation.entries.splice(i, 1)\n            }\n          }\n        })\n      }\n    )\n  }\n}\n"]}