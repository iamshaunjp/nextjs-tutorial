{"version":3,"sources":["../../../../../../build/webpack/loaders/next-style-loader/runtime/injectStylesIntoLinkTag.js"],"names":["getTarget","memo","memorize","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","module","exports","url","options","attributes","nonce","__webpack_nonce__","link","createElement","rel","href","Object","keys","forEach","key","setAttribute","insert","Error","appendChild","newUrl","parentNode","removeChild"],"mappings":"aAAA,KAAMA,CAAAA,SAAS,CAAI,QAASA,CAAAA,SAAT,EAAqB,CACtC,KAAMC,CAAAA,IAAI,CAAG,EAAb,CAEA,MAAO,SAASC,CAAAA,QAAT,CAAkBC,MAAlB,CAA0B,CAC/B,GAAI,MAAOF,CAAAA,IAAI,CAACE,MAAD,CAAX,GAAwB,WAA5B,CAAyC,CACvC,GAAIC,CAAAA,WAAW,CAAGC,QAAQ,CAACC,aAAT,CAAuBH,MAAvB,CAAlB,CAEA;AACA,GACEI,MAAM,CAACC,iBAAP,EACAJ,WAAW,WAAYG,CAAAA,MAAM,CAACC,iBAFhC,CAGE,CACA,GAAI,CACF;AACA;AACAJ,WAAW,CAAGA,WAAW,CAACK,eAAZ,CAA4BC,IAA1C,CACD,CAAC,MAAOC,CAAP,CAAU,CACV;AACAP,WAAW,CAAG,IAAd,CACD,CACF,CAEDH,IAAI,CAACE,MAAD,CAAJ,CAAeC,WAAf,CACD,CAED,MAAOH,CAAAA,IAAI,CAACE,MAAD,CAAX,CACD,CAvBD,CAwBD,CA3BiB,EAAlB,CA6BAS,MAAM,CAACC,OAAP,CAAiB,CAACC,GAAD,CAAMC,OAAN,GAAkB,CACjCA,OAAO,CAAGA,OAAO,EAAI,EAArB,CACAA,OAAO,CAACC,UAAR,CACE,MAAOD,CAAAA,OAAO,CAACC,UAAf,GAA8B,QAA9B,CAAyCD,OAAO,CAACC,UAAjD,CAA8D,EADhE,CAGA,GAAI,MAAOD,CAAAA,OAAO,CAACC,UAAR,CAAmBC,KAA1B,GAAoC,WAAxC,CAAqD,CACnD,KAAMA,CAAAA,KAAK,CACT;AACA,MAAOC,CAAAA,iBAAP,GAA6B,WAA7B,CAA2CA,iBAA3C,CAA+D,IAFjE,CAIA,GAAID,KAAJ,CAAW,CACTF,OAAO,CAACC,UAAR,CAAmBC,KAAnB,CAA2BA,KAA3B,CACD,CACF,CAED,KAAME,CAAAA,IAAI,CAAGd,QAAQ,CAACe,aAAT,CAAuB,MAAvB,CAAb,CAEAD,IAAI,CAACE,GAAL,CAAW,YAAX,CACAF,IAAI,CAACG,IAAL,CAAYR,GAAZ,CAEAS,MAAM,CAACC,IAAP,CAAYT,OAAO,CAACC,UAApB,EAAgCS,OAAhC,CAAyCC,GAAD,EAAS,CAC/CP,IAAI,CAACQ,YAAL,CAAkBD,GAAlB,CAAuBX,OAAO,CAACC,UAAR,CAAmBU,GAAnB,CAAvB,EACD,CAFD,EAIA,GAAI,MAAOX,CAAAA,OAAO,CAACa,MAAf,GAA0B,UAA9B,CAA0C,CACxCb,OAAO,CAACa,MAAR,CAAeT,IAAf,EACD,CAFD,IAEO,CACL,KAAMhB,CAAAA,MAAM,CAAGH,SAAS,CAACe,OAAO,CAACa,MAAR,EAAkB,MAAnB,CAAxB,CAEA,GAAI,CAACzB,MAAL,CAAa,CACX,KAAM,IAAI0B,CAAAA,KAAJ,CACJ,yGADI,CAAN,CAGD,CAED1B,MAAM,CAAC2B,WAAP,CAAmBX,IAAnB,EACD,CAED,MAAQY,CAAAA,MAAD,EAAY,CACjB,GAAI,MAAOA,CAAAA,MAAP,GAAkB,QAAtB,CAAgC,CAC9BZ,IAAI,CAACG,IAAL,CAAYS,MAAZ,CACD,CAFD,IAEO,CACLZ,IAAI,CAACa,UAAL,CAAgBC,WAAhB,CAA4Bd,IAA5B,EACD,CACF,CAND,CAOD,CA7CD","sourcesContent":["const getTarget = (function getTarget() {\n  const memo = {}\n\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      let styleTarget = document.querySelector(target)\n\n      // Special case to return head of iframe instead of iframe itself\n      if (\n        window.HTMLIFrameElement &&\n        styleTarget instanceof window.HTMLIFrameElement\n      ) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null\n        }\n      }\n\n      memo[target] = styleTarget\n    }\n\n    return memo[target]\n  }\n})()\n\nmodule.exports = (url, options) => {\n  options = options || {}\n  options.attributes =\n    typeof options.attributes === 'object' ? options.attributes : {}\n\n  if (typeof options.attributes.nonce === 'undefined') {\n    const nonce =\n      // eslint-disable-next-line no-undef\n      typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null\n\n    if (nonce) {\n      options.attributes.nonce = nonce\n    }\n  }\n\n  const link = document.createElement('link')\n\n  link.rel = 'stylesheet'\n  link.href = url\n\n  Object.keys(options.attributes).forEach((key) => {\n    link.setAttribute(key, options.attributes[key])\n  })\n\n  if (typeof options.insert === 'function') {\n    options.insert(link)\n  } else {\n    const target = getTarget(options.insert || 'head')\n\n    if (!target) {\n      throw new Error(\n        \"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\"\n      )\n    }\n\n    target.appendChild(link)\n  }\n\n  return (newUrl) => {\n    if (typeof newUrl === 'string') {\n      link.href = newUrl\n    } else {\n      link.parentNode.removeChild(link)\n    }\n  }\n}\n"]}