{"ast":null,"code":"\"use strict\";\n\nvar _s = $RefreshSig$();\n\nexports.__esModule = true;\nexports.isInAmpMode = isInAmpMode;\nexports.useAmp = useAmp;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _ampContext = require(\"./amp-context\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction isInAmpMode() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$ampFirst = _ref.ampFirst,\n      ampFirst = _ref$ampFirst === void 0 ? false : _ref$ampFirst,\n      _ref$hybrid = _ref.hybrid,\n      hybrid = _ref$hybrid === void 0 ? false : _ref$hybrid,\n      _ref$hasQuery = _ref.hasQuery,\n      hasQuery = _ref$hasQuery === void 0 ? false : _ref$hasQuery;\n\n  return ampFirst || hybrid && hasQuery;\n}\n\nfunction useAmp() {\n  _s();\n\n  // Don't assign the context value to a variable to save bytes\n  return isInAmpMode(_react[\"default\"].useContext(_ampContext.AmpStateContext));\n}\n\n_s(useAmp, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");","map":{"version":3,"sources":["../../../next-server/lib/amp.ts"],"names":["ampFirst","hybrid","hasQuery","isInAmpMode","React","AmpStateContext"],"mappings":";;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;;;;;AAEO;;AAAA,SAAA,WAAA,GAIU;AAAA,iFAJV,EAIU;AAAA,2BAHfA,QAGe;AAAA,MAHfA,QAGe,8BAJW,KAIX;AAAA,yBAFfC,MAEe;AAAA,MAFfA,MAEe,4BAJW,KAIX;AAAA,2BADfC,QACe;AAAA,MADfA,QACe,8BAJW,KAIX;;AACf,SAAOF,QAAQ,IAAKC,MAAM,IAA1B,QAAA;AAGK;;AAAA,SAAA,MAAA,GAA2B;AAAA;;AAChC;AACA,SAAOE,WAAW,CAACC,MAAAA,WAAAA,CAAAA,UAAAA,CAAiBC,WAAAA,CAApC,eAAmBD,CAAD,CAAlB;AACD;;GAHM,M","sourcesContent":["import React from 'react'\nimport { AmpStateContext } from './amp-context'\n\nexport function isInAmpMode({\n  ampFirst = false,\n  hybrid = false,\n  hasQuery = false,\n} = {}): boolean {\n  return ampFirst || (hybrid && hasQuery)\n}\n\nexport function useAmp(): boolean {\n  // Don't assign the context value to a variable to save bytes\n  return isInAmpMode(React.useContext(AmpStateContext))\n}\n"]},"metadata":{},"sourceType":"script"}