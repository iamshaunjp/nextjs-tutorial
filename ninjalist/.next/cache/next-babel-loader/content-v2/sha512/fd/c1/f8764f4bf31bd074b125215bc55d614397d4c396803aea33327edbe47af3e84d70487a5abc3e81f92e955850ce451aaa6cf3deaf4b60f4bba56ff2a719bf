{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar next = _interopRequireWildcard(require(\"./\"));\n\nvar _eventSourcePolyfill = _interopRequireDefault(require(\"./dev/event-source-polyfill\"));\n\nvar _onDemandEntriesClient = _interopRequireDefault(require(\"./dev/on-demand-entries-client\"));\n\nvar _webpackHotMiddlewareClient = _interopRequireDefault(require(\"./dev/webpack-hot-middleware-client\"));\n\nvar _devBuildWatcher = _interopRequireDefault(require(\"./dev/dev-build-watcher\"));\n\nvar _fouc = require(\"./dev/fouc\");\n\nvar _eventsource = require(\"./dev/error-overlay/eventsource\");\n\nvar querystring = _interopRequireWildcard(require(\"../next-server/lib/router/utils/querystring\"));\n/* globals import('./dev/noop'); */\n// Temporary workaround for the issue described here:\n// https://github.com/vercel/next.js/issues/3775#issuecomment-407438123\n// The runtimeChunk doesn't have dynamic import handling code when there hasn't been a dynamic import\n// The runtimeChunk can't hot reload itself currently to correct it when adding pages using on-demand-entries\n// eslint-disable-next-line no-unused-expressions\n\n\nimport('./dev/noop');\n; // Support EventSource on Internet Explorer 11\n\nif (!window.EventSource) {\n  window.EventSource = _eventSourcePolyfill[\"default\"];\n}\n\nvar _window = window,\n    assetPrefix = _window.__NEXT_DATA__.assetPrefix;\nvar prefix = assetPrefix || '';\nvar webpackHMR = (0, _webpackHotMiddlewareClient[\"default\"])({\n  assetPrefix: prefix\n});\nwindow.next = next;\n(0, next[\"default\"])({\n  webpackHMR: webpackHMR\n}).then(function (_ref) {\n  var renderCtx = _ref.renderCtx,\n      render = _ref.render;\n  (0, _onDemandEntriesClient[\"default\"])({\n    assetPrefix: prefix\n  });\n\n  var buildIndicatorHandler = function buildIndicatorHandler() {};\n\n  function devPagesManifestListener(event) {\n    if (event.data.indexOf('devPagesManifest') !== -1) {\n      fetch(\"\".concat(prefix, \"/_next/static/development/_devPagesManifest.json\")).then(function (res) {\n        return res.json();\n      }).then(function (manifest) {\n        window.__DEV_PAGES_MANIFEST = manifest;\n      })[\"catch\"](function (err) {\n        console.log(\"Failed to fetch devPagesManifest\", err);\n      });\n    } else if (event.data.indexOf('serverOnlyChanges') !== -1) {\n      var _JSON$parse = JSON.parse(event.data),\n          pages = _JSON$parse.pages;\n\n      var router = window.next.router;\n\n      if (pages.includes(router.pathname)) {\n        console.log('Refreshing page data due to server-side change');\n        buildIndicatorHandler('building');\n\n        var clearIndicator = function clearIndicator() {\n          return buildIndicatorHandler('built');\n        };\n\n        router.replace(router.pathname + '?' + String(querystring.assign(querystring.urlQueryToSearchParams(router.query), new URLSearchParams(location.search))), router.asPath)[\"finally\"](clearIndicator);\n      }\n    }\n  }\n\n  devPagesManifestListener.unfiltered = true;\n  (0, _eventsource.getEventSourceWrapper)({}).addMessageListener(devPagesManifestListener);\n\n  if (process.env.__NEXT_BUILD_INDICATOR) {\n    (0, _devBuildWatcher[\"default\"])(function (handler) {\n      buildIndicatorHandler = handler;\n    });\n  } // delay rendering until after styles have been applied in development\n\n\n  (0, _fouc.displayContent)(function () {\n    render(renderCtx);\n  });\n})[\"catch\"](function (err) {\n  console.error('Error was not caught', err);\n});","map":{"version":3,"sources":["../../client/next-dev.js"],"names":["__REPLACE_NOOP_IMPORT__","window","EventSourcePolyfill","__NEXT_DATA__","prefix","assetPrefix","webpackHMR","buildIndicatorHandler","event","fetch","res","manifest","err","console","JSON","router","pages","clearIndicator","String","querystring","location","devPagesManifestListener","process","handler","render"],"mappings":"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","sourcesContent":["/* globals __REPLACE_NOOP_IMPORT__ */\nimport initNext, * as next from './'\nimport EventSourcePolyfill from './dev/event-source-polyfill'\nimport initOnDemandEntries from './dev/on-demand-entries-client'\nimport initWebpackHMR from './dev/webpack-hot-middleware-client'\nimport initializeBuildWatcher from './dev/dev-build-watcher'\nimport { displayContent } from './dev/fouc'\nimport { getEventSourceWrapper } from './dev/error-overlay/eventsource'\nimport * as querystring from '../next-server/lib/router/utils/querystring'\n\n// Temporary workaround for the issue described here:\n// https://github.com/vercel/next.js/issues/3775#issuecomment-407438123\n// The runtimeChunk doesn't have dynamic import handling code when there hasn't been a dynamic import\n// The runtimeChunk can't hot reload itself currently to correct it when adding pages using on-demand-entries\n// eslint-disable-next-line no-unused-expressions\n__REPLACE_NOOP_IMPORT__\n\n// Support EventSource on Internet Explorer 11\nif (!window.EventSource) {\n  window.EventSource = EventSourcePolyfill\n}\n\nconst {\n  __NEXT_DATA__: { assetPrefix },\n} = window\n\nconst prefix = assetPrefix || ''\nconst webpackHMR = initWebpackHMR({ assetPrefix: prefix })\n\nwindow.next = next\ninitNext({ webpackHMR })\n  .then(({ renderCtx, render }) => {\n    initOnDemandEntries({ assetPrefix: prefix })\n\n    let buildIndicatorHandler = () => {}\n\n    function devPagesManifestListener(event) {\n      if (event.data.indexOf('devPagesManifest') !== -1) {\n        fetch(`${prefix}/_next/static/development/_devPagesManifest.json`)\n          .then((res) => res.json())\n          .then((manifest) => {\n            window.__DEV_PAGES_MANIFEST = manifest\n          })\n          .catch((err) => {\n            console.log(`Failed to fetch devPagesManifest`, err)\n          })\n      } else if (event.data.indexOf('serverOnlyChanges') !== -1) {\n        const { pages } = JSON.parse(event.data)\n        const router = window.next.router\n\n        if (pages.includes(router.pathname)) {\n          console.log('Refreshing page data due to server-side change')\n\n          buildIndicatorHandler('building')\n\n          const clearIndicator = () => buildIndicatorHandler('built')\n\n          router\n            .replace(\n              router.pathname +\n                '?' +\n                String(\n                  querystring.assign(\n                    querystring.urlQueryToSearchParams(router.query),\n                    new URLSearchParams(location.search)\n                  )\n                ),\n              router.asPath\n            )\n            .finally(clearIndicator)\n        }\n      }\n    }\n    devPagesManifestListener.unfiltered = true\n    getEventSourceWrapper({}).addMessageListener(devPagesManifestListener)\n\n    if (process.env.__NEXT_BUILD_INDICATOR) {\n      initializeBuildWatcher((handler) => {\n        buildIndicatorHandler = handler\n      })\n    }\n\n    // delay rendering until after styles have been applied in development\n    displayContent(() => {\n      render(renderCtx)\n    })\n  })\n  .catch((err) => {\n    console.error('Error was not caught', err)\n  })\n"]},"metadata":{},"sourceType":"script"}